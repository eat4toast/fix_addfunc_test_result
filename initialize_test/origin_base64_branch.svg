<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="822.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="805" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="805" > </text>
<g id="frames">
<g >
<title>WasmEdge::Runtime::StackManager::getTop (1 samples, 0.08%)</title><rect x="866.0" y="389" width="0.9" height="15.0" fill="rgb(229,172,23)" rx="2" ry="2" />
<text  x="868.97" y="399.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runAddOp&lt;unsigned int&gt; (30 samples, 2.38%)</title><rect x="555.0" y="405" width="28.1" height="15.0" fill="rgb(218,174,46)" rx="2" ry="2" />
<text  x="558.05" y="415.5" >W..</text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.08%)</title><rect x="866.0" y="373" width="0.9" height="15.0" fill="rgb(220,30,43)" rx="2" ry="2" />
<text  x="868.97" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::execute (1,230 samples, 97.62%)</title><rect x="26.9" y="437" width="1151.9" height="15.0" fill="rgb(234,210,44)" rx="2" ry="2" />
<text  x="29.86" y="447.5" >WasmEdge::Executor::Executor::execute</text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runBrTableOp (6 samples, 0.48%)</title><rect x="477.3" y="405" width="5.6" height="15.0" fill="rgb(213,198,45)" rx="2" ry="2" />
<text  x="480.32" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.24%)</title><rect x="544.7" y="421" width="2.9" height="15.0" fill="rgb(206,209,44)" rx="2" ry="2" />
<text  x="547.75" y="431.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runBrIfOp (1 samples, 0.08%)</title><rect x="10.9" y="709" width="1.0" height="15.0" fill="rgb(239,55,25)" rx="2" ry="2" />
<text  x="13.94" y="719.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;double, unsigned __int128, __int128, unsigned long __vector (8 samples, 0.63%)</title><rect x="547.6" y="277" width="7.4" height="15.0" fill="rgb(240,155,19)" rx="2" ry="2" />
<text  x="550.56" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;WasmEdge::Runtime::Instance::ModuleInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::ModuleInstance&gt; &gt;::~unique_ptr (3 samples, 0.24%)</title><rect x="1185.3" y="677" width="2.8" height="15.0" fill="rgb(213,146,20)" rx="2" ry="2" />
<text  x="1188.32" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (3 samples, 0.24%)</title><rect x="851.0" y="357" width="2.8" height="15.0" fill="rgb(218,120,41)" rx="2" ry="2" />
<text  x="853.98" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadExpression (13 samples, 1.03%)</title><rect x="13.7" y="373" width="12.2" height="15.0" fill="rgb(239,3,46)" rx="2" ry="2" />
<text  x="16.75" y="383.5" ></text>
</g>
<g >
<title>perf_lock_task_context (1 samples, 0.08%)</title><rect x="10.0" y="581" width="0.9" height="15.0" fill="rgb(240,89,12)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.08%)</title><rect x="532.6" y="261" width="0.9" height="15.0" fill="rgb(217,226,21)" rx="2" ry="2" />
<text  x="535.57" y="271.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (9 samples, 0.71%)</title><rect x="583.1" y="293" width="8.5" height="15.0" fill="rgb(242,77,28)" rx="2" ry="2" />
<text  x="586.14" y="303.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadInstruction (1 samples, 0.08%)</title><rect x="21.2" y="309" width="1.0" height="15.0" fill="rgb(240,2,31)" rx="2" ry="2" />
<text  x="24.24" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.08%)</title><rect x="1184.4" y="517" width="0.9" height="15.0" fill="rgb(253,73,32)" rx="2" ry="2" />
<text  x="1187.38" y="527.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (36 samples, 2.86%)</title><rect x="874.4" y="389" width="33.7" height="15.0" fill="rgb(239,160,6)" rx="2" ry="2" />
<text  x="877.40" y="399.5" >cx..</text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (9 samples, 0.71%)</title><rect x="908.1" y="373" width="8.4" height="15.0" fill="rgb(216,111,6)" rx="2" ry="2" />
<text  x="911.11" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::MemoryInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::MemoryInstance&gt; &gt;*&gt; (1 samples, 0.08%)</title><rect x="1187.2" y="581" width="0.9" height="15.0" fill="rgb(245,2,37)" rx="2" ry="2" />
<text  x="1190.19" y="591.5" ></text>
</g>
<g >
<title>WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1,250 samples, 99.21%)</title><rect x="13.7" y="613" width="1170.7" height="15.0" fill="rgb(218,62,23)" rx="2" ry="2" />
<text  x="16.75" y="623.5" >WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, uns..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::~_Move_assign_base (2 samples, 0.16%)</title><rect x="1185.3" y="453" width="1.9" height="15.0" fill="rgb(244,15,12)" rx="2" ry="2" />
<text  x="1188.32" y="463.5" ></text>
</g>
<g >
<title>WasmEdge::VM::VM::unsafeExecute (1,230 samples, 97.62%)</title><rect x="26.9" y="485" width="1151.9" height="15.0" fill="rgb(215,217,44)" rx="2" ry="2" />
<text  x="29.86" y="495.5" >WasmEdge::VM::VM::unsafeExecute</text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (36 samples, 2.86%)</title><rect x="874.4" y="277" width="33.7" height="15.0" fill="rgb(216,222,43)" rx="2" ry="2" />
<text  x="877.40" y="287.5" >cx..</text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;unsigned __int128, __int128, unsigned long __vector (8 samples, 0.63%)</title><rect x="547.6" y="261" width="7.4" height="15.0" fill="rgb(211,27,26)" rx="2" ry="2" />
<text  x="550.56" y="271.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (11 samples, 0.87%)</title><rect x="531.6" y="357" width="10.3" height="15.0" fill="rgb(209,143,1)" rx="2" ry="2" />
<text  x="534.63" y="367.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.24%)</title><rect x="539.1" y="229" width="2.8" height="15.0" fill="rgb(212,104,9)" rx="2" ry="2" />
<text  x="542.13" y="239.5" ></text>
</g>
<g >
<title>start_thread (1,250 samples, 99.21%)</title><rect x="13.7" y="725" width="1170.7" height="15.0" fill="rgb(205,109,29)" rx="2" ry="2" />
<text  x="16.75" y="735.5" >start_thread</text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runIfElseOp (18 samples, 1.43%)</title><rect x="513.8" y="405" width="16.9" height="15.0" fill="rgb(224,114,40)" rx="2" ry="2" />
<text  x="516.84" y="415.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;long, float, double, unsigned __int128, __int128, unsigned long __vector (8 samples, 0.63%)</title><rect x="547.6" y="309" width="7.4" height="15.0" fill="rgb(220,86,10)" rx="2" ry="2" />
<text  x="550.56" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.08%)</title><rect x="11.9" y="645" width="0.9" height="15.0" fill="rgb(209,182,33)" rx="2" ry="2" />
<text  x="14.87" y="655.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (3 samples, 0.24%)</title><rect x="916.5" y="277" width="2.8" height="15.0" fill="rgb(229,15,6)" rx="2" ry="2" />
<text  x="919.54" y="287.5" ></text>
</g>
<g >
<title>WasmEdge::VM::VM::unsafeRunWasmFile (1,235 samples, 98.02%)</title><rect x="26.9" y="501" width="1156.5" height="15.0" fill="rgb(228,222,54)" rx="2" ry="2" />
<text  x="29.86" y="511.5" >WasmEdge::VM::VM::unsafeRunWasmFile</text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::maybePopFrame (5 samples, 0.40%)</title><rect x="925.9" y="405" width="4.7" height="15.0" fill="rgb(209,73,41)" rx="2" ry="2" />
<text  x="928.90" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::~_Variant_base (2 samples, 0.16%)</title><rect x="1185.3" y="469" width="1.9" height="15.0" fill="rgb(219,138,19)" rx="2" ry="2" />
<text  x="1188.32" y="479.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.08%)</title><rect x="1184.4" y="501" width="0.9" height="15.0" fill="rgb(208,75,8)" rx="2" ry="2" />
<text  x="1187.38" y="511.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (13 samples, 1.03%)</title><rect x="619.7" y="389" width="12.1" height="15.0" fill="rgb(250,29,18)" rx="2" ry="2" />
<text  x="622.67" y="399.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (1 samples, 0.08%)</title><rect x="641.2" y="341" width="0.9" height="15.0" fill="rgb(222,137,50)" rx="2" ry="2" />
<text  x="644.21" y="351.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (6 samples, 0.48%)</title><rect x="1173.1" y="293" width="5.7" height="15.0" fill="rgb(210,220,11)" rx="2" ry="2" />
<text  x="1176.14" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;WasmEdge::AST::Instruction*&gt; (1 samples, 0.08%)</title><rect x="24.0" y="277" width="1.0" height="15.0" fill="rgb(211,220,31)" rx="2" ry="2" />
<text  x="27.05" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::~vector (2 samples, 0.16%)</title><rect x="1185.3" y="197" width="1.9" height="15.0" fill="rgb(206,58,23)" rx="2" ry="2" />
<text  x="1188.32" y="207.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (30 samples, 2.38%)</title><rect x="555.0" y="357" width="28.1" height="15.0" fill="rgb(211,166,40)" rx="2" ry="2" />
<text  x="558.05" y="367.5" >c..</text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (6 samples, 0.48%)</title><rect x="1173.1" y="341" width="5.7" height="15.0" fill="rgb(218,221,44)" rx="2" ry="2" />
<text  x="1176.14" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;WasmEdge::AST::Instruction&gt;::deallocate (1 samples, 0.08%)</title><rect x="25.9" y="309" width="1.0" height="15.0" fill="rgb(223,228,35)" rx="2" ry="2" />
<text  x="28.92" y="319.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;std::unique_ptr&lt;WasmEdge::AST::Module, std::default_delete&lt;WasmEdge::AST::Module&gt; &gt;, WasmEdge::ErrCode, false&gt;::~expected_move_assign_base (1 samples, 0.08%)</title><rect x="1183.4" y="485" width="1.0" height="15.0" fill="rgb(231,166,38)" rx="2" ry="2" />
<text  x="1186.44" y="495.5" ></text>
</g>
<g >
<title>WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (8 samples, 0.63%)</title><rect x="547.6" y="389" width="7.4" height="15.0" fill="rgb(226,7,54)" rx="2" ry="2" />
<text  x="550.56" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (6 samples, 0.48%)</title><rect x="468.0" y="373" width="5.6" height="15.0" fill="rgb(206,224,16)" rx="2" ry="2" />
<text  x="470.95" y="383.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.08%)</title><rect x="1187.2" y="341" width="0.9" height="15.0" fill="rgb(217,74,23)" rx="2" ry="2" />
<text  x="1190.19" y="351.5" ></text>
</g>
<g >
<title>std::__atomic_futex_unsigned&lt;2147483648u&gt;::_M_load_and_test (1 samples, 0.08%)</title><rect x="1184.4" y="613" width="0.9" height="15.0" fill="rgb(223,170,18)" rx="2" ry="2" />
<text  x="1187.38" y="623.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (9 samples, 0.71%)</title><rect x="583.1" y="277" width="8.5" height="15.0" fill="rgb(232,180,36)" rx="2" ry="2" />
<text  x="586.14" y="287.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (3 samples, 0.24%)</title><rect x="539.1" y="245" width="2.8" height="15.0" fill="rgb(242,228,28)" rx="2" ry="2" />
<text  x="542.13" y="255.5" ></text>
</g>
<g >
<title>WasmEdge::VM::VM::~VM (3 samples, 0.24%)</title><rect x="1185.3" y="693" width="2.8" height="15.0" fill="rgb(211,134,17)" rx="2" ry="2" />
<text  x="1188.32" y="703.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (2 samples, 0.16%)</title><rect x="870.7" y="293" width="1.8" height="15.0" fill="rgb(211,60,32)" rx="2" ry="2" />
<text  x="873.65" y="303.5" ></text>
</g>
<g >
<title>operator (1 samples, 0.08%)</title><rect x="25.9" y="405" width="1.0" height="15.0" fill="rgb(217,112,20)" rx="2" ry="2" />
<text  x="28.92" y="415.5" ></text>
</g>
<g >
<title>remove_vma (1 samples, 0.08%)</title><rect x="1187.2" y="357" width="0.9" height="15.0" fill="rgb(246,75,54)" rx="2" ry="2" />
<text  x="1190.19" y="367.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (1 samples, 0.08%)</title><rect x="924.0" y="389" width="1.0" height="15.0" fill="rgb(244,75,38)" rx="2" ry="2" />
<text  x="927.03" y="399.5" ></text>
</g>
<g >
<title>__libc_start_main (4 samples, 0.32%)</title><rect x="1184.4" y="725" width="3.7" height="15.0" fill="rgb(237,199,6)" rx="2" ry="2" />
<text  x="1187.38" y="735.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::ModuleInstance::getFunc (7 samples, 0.56%)</title><rect x="484.8" y="389" width="6.6" height="15.0" fill="rgb(211,60,30)" rx="2" ry="2" />
<text  x="487.81" y="399.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.32%)</title><rect x="1184.4" y="741" width="3.7" height="15.0" fill="rgb(211,199,4)" rx="2" ry="2" />
<text  x="1187.38" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Validator::VType, std::allocator&lt;WasmEdge::Validator::VType&gt; &gt;::size (1 samples, 0.08%)</title><rect x="1182.5" y="373" width="0.9" height="15.0" fill="rgb(236,135,4)" rx="2" ry="2" />
<text  x="1185.51" y="383.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (30 samples, 2.38%)</title><rect x="555.0" y="309" width="28.1" height="15.0" fill="rgb(250,19,52)" rx="2" ry="2" />
<text  x="558.05" y="319.5" >c..</text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (1 samples, 0.08%)</title><rect x="641.2" y="309" width="0.9" height="15.0" fill="rgb(230,136,44)" rx="2" ry="2" />
<text  x="644.21" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::~_Copy_ctor_base (2 samples, 0.16%)</title><rect x="1185.3" y="405" width="1.9" height="15.0" fill="rgb(254,146,4)" rx="2" ry="2" />
<text  x="1188.32" y="415.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runCallOp (2 samples, 0.16%)</title><rect x="489.5" y="325" width="1.9" height="15.0" fill="rgb(236,214,32)" rx="2" ry="2" />
<text  x="492.49" y="335.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (1 samples, 0.08%)</title><rect x="25.9" y="229" width="1.0" height="15.0" fill="rgb(248,86,1)" rx="2" ry="2" />
<text  x="28.92" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1,250 samples, 99.21%)</title><rect x="13.7" y="709" width="1170.7" height="15.0" fill="rgb(213,181,47)" rx="2" ry="2" />
<text  x="16.75" y="719.5" >[libstdc++.so.6.0.28]</text>
</g>
<g >
<title>loadSectionContentVec&lt;WasmEdge::AST::CodeSection, WasmEdge::Loader::Loader::loadSection (13 samples, 1.03%)</title><rect x="13.7" y="421" width="12.2" height="15.0" fill="rgb(227,82,17)" rx="2" ry="2" />
<text  x="16.75" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.08%)</title><rect x="1187.2" y="421" width="0.9" height="15.0" fill="rgb(219,140,9)" rx="2" ry="2" />
<text  x="1190.19" y="431.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (2 samples, 0.16%)</title><rect x="870.7" y="357" width="1.8" height="15.0" fill="rgb(224,128,5)" rx="2" ry="2" />
<text  x="873.65" y="367.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.08%)</title><rect x="25.9" y="165" width="1.0" height="15.0" fill="rgb(206,56,0)" rx="2" ry="2" />
<text  x="28.92" y="175.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (1 samples, 0.08%)</title><rect x="873.5" y="293" width="0.9" height="15.0" fill="rgb(217,224,37)" rx="2" ry="2" />
<text  x="876.46" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.08%)</title><rect x="925.0" y="357" width="0.9" height="15.0" fill="rgb(250,151,51)" rx="2" ry="2" />
<text  x="927.97" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::_M_deallocate (2 samples, 0.16%)</title><rect x="1185.3" y="165" width="1.9" height="15.0" fill="rgb(220,183,48)" rx="2" ry="2" />
<text  x="1188.32" y="175.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (9 samples, 0.71%)</title><rect x="583.1" y="309" width="8.5" height="15.0" fill="rgb(236,144,49)" rx="2" ry="2" />
<text  x="586.14" y="319.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (5 samples, 0.40%)</title><rect x="919.3" y="325" width="4.7" height="15.0" fill="rgb(250,192,32)" rx="2" ry="2" />
<text  x="922.35" y="335.5" ></text>
</g>
<g >
<title>WasmEdge::AST::Segment::~Segment (1 samples, 0.08%)</title><rect x="1183.4" y="181" width="1.0" height="15.0" fill="rgb(249,161,8)" rx="2" ry="2" />
<text  x="1186.44" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::_M_realloc_insert&lt;WasmEdge::OpCode&amp;, unsigned long&amp;&gt; (1 samples, 0.08%)</title><rect x="24.0" y="325" width="1.0" height="15.0" fill="rgb(250,10,45)" rx="2" ry="2" />
<text  x="27.05" y="335.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runStoreOp&lt;unsigned int, 8u&gt; (3 samples, 0.24%)</title><rect x="541.9" y="405" width="2.8" height="15.0" fill="rgb(214,49,42)" rx="2" ry="2" />
<text  x="544.94" y="415.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (6 samples, 0.48%)</title><rect x="1173.1" y="357" width="5.7" height="15.0" fill="rgb(235,144,51)" rx="2" ry="2" />
<text  x="1176.14" y="367.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.08%)</title><rect x="25.9" y="213" width="1.0" height="15.0" fill="rgb(240,127,21)" rx="2" ry="2" />
<text  x="28.92" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt;::~unique_ptr (2 samples, 0.16%)</title><rect x="1185.3" y="533" width="1.9" height="15.0" fill="rgb(226,32,41)" rx="2" ry="2" />
<text  x="1188.32" y="543.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::popFrame (3 samples, 0.24%)</title><rect x="925.9" y="389" width="2.8" height="15.0" fill="rgb(223,201,13)" rx="2" ry="2" />
<text  x="928.90" y="399.5" ></text>
</g>
<g >
<title>WasmEdge::AST::CodeSection::~CodeSection (1 samples, 0.08%)</title><rect x="1183.4" y="293" width="1.0" height="15.0" fill="rgb(227,50,2)" rx="2" ry="2" />
<text  x="1186.44" y="303.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::branchToLabel (199 samples, 15.79%)</title><rect x="281.6" y="357" width="186.4" height="15.0" fill="rgb(219,14,45)" rx="2" ry="2" />
<text  x="284.59" y="367.5" >WasmEdge::Executor::Exec..</text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (7 samples, 0.56%)</title><rect x="632.8" y="309" width="6.5" height="15.0" fill="rgb(244,177,34)" rx="2" ry="2" />
<text  x="635.78" y="319.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::pop (10 samples, 0.79%)</title><rect x="521.3" y="389" width="9.4" height="15.0" fill="rgb(253,80,35)" rx="2" ry="2" />
<text  x="524.33" y="399.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (13 samples, 1.03%)</title><rect x="619.7" y="357" width="12.1" height="15.0" fill="rgb(221,116,38)" rx="2" ry="2" />
<text  x="622.67" y="367.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.08%)</title><rect x="1184.4" y="453" width="0.9" height="15.0" fill="rgb(245,186,14)" rx="2" ry="2" />
<text  x="1187.38" y="463.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (3 samples, 0.24%)</title><rect x="916.5" y="357" width="2.8" height="15.0" fill="rgb(247,29,10)" rx="2" ry="2" />
<text  x="919.54" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt; &gt; &gt;::~vector (2 samples, 0.16%)</title><rect x="1185.3" y="613" width="1.9" height="15.0" fill="rgb(241,44,41)" rx="2" ry="2" />
<text  x="1188.32" y="623.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (2 samples, 0.16%)</title><rect x="870.7" y="309" width="1.8" height="15.0" fill="rgb(245,149,39)" rx="2" ry="2" />
<text  x="873.65" y="319.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (13 samples, 1.03%)</title><rect x="619.7" y="373" width="12.1" height="15.0" fill="rgb(217,162,7)" rx="2" ry="2" />
<text  x="622.67" y="383.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (3 samples, 0.24%)</title><rect x="916.5" y="293" width="2.8" height="15.0" fill="rgb(211,173,23)" rx="2" ry="2" />
<text  x="919.54" y="303.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (1 samples, 0.08%)</title><rect x="924.0" y="277" width="1.0" height="15.0" fill="rgb(243,115,8)" rx="2" ry="2" />
<text  x="927.03" y="287.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1,250 samples, 99.21%)</title><rect x="13.7" y="693" width="1170.7" height="15.0" fill="rgb(235,157,21)" rx="2" ry="2" />
<text  x="16.75" y="703.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned l..</text>
</g>
<g >
<title>WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.08%)</title><rect x="1184.4" y="693" width="0.9" height="15.0" fill="rgb(233,141,31)" rx="2" ry="2" />
<text  x="1187.38" y="703.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (1 samples, 0.08%)</title><rect x="924.0" y="373" width="1.0" height="15.0" fill="rgb(235,10,31)" rx="2" ry="2" />
<text  x="927.03" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::AST::Instruction::getLabelList (2 samples, 0.16%)</title><rect x="480.1" y="389" width="1.9" height="15.0" fill="rgb(219,221,3)" rx="2" ry="2" />
<text  x="483.13" y="399.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (6 samples, 0.48%)</title><rect x="1173.1" y="325" width="5.7" height="15.0" fill="rgb(208,21,36)" rx="2" ry="2" />
<text  x="1176.14" y="335.5" ></text>
</g>
<g >
<title>perf_pin_task_context (1 samples, 0.08%)</title><rect x="10.0" y="597" width="0.9" height="15.0" fill="rgb(230,209,37)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (30 samples, 2.38%)</title><rect x="555.0" y="325" width="28.1" height="15.0" fill="rgb(237,149,49)" rx="2" ry="2" />
<text  x="558.05" y="335.5" >c..</text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runMulOp&lt;unsigned int&gt; (1 samples, 0.08%)</title><rect x="872.5" y="405" width="1.0" height="15.0" fill="rgb(210,73,51)" rx="2" ry="2" />
<text  x="875.52" y="415.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.08%)</title><rect x="1188.1" y="501" width="1.0" height="15.0" fill="rgb(210,113,28)" rx="2" ry="2" />
<text  x="1191.13" y="511.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.08%)</title><rect x="11.9" y="677" width="0.9" height="15.0" fill="rgb(218,126,3)" rx="2" ry="2" />
<text  x="14.87" y="687.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (3 samples, 0.24%)</title><rect x="916.5" y="309" width="2.8" height="15.0" fill="rgb(207,218,1)" rx="2" ry="2" />
<text  x="919.54" y="319.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadSegment (1 samples, 0.08%)</title><rect x="25.9" y="389" width="1.0" height="15.0" fill="rgb(222,131,41)" rx="2" ry="2" />
<text  x="28.92" y="399.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::pop (6 samples, 0.48%)</title><rect x="468.0" y="389" width="5.6" height="15.0" fill="rgb(207,54,18)" rx="2" ry="2" />
<text  x="470.95" y="399.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (3 samples, 0.24%)</title><rect x="916.5" y="325" width="2.8" height="15.0" fill="rgb(226,27,19)" rx="2" ry="2" />
<text  x="919.54" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.16%)</title><rect x="1188.1" y="741" width="1.9" height="15.0" fill="rgb(212,126,37)" rx="2" ry="2" />
<text  x="1191.13" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.08%)</title><rect x="926.8" y="373" width="1.0" height="15.0" fill="rgb(217,0,28)" rx="2" ry="2" />
<text  x="929.84" y="383.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (2 samples, 0.16%)</title><rect x="870.7" y="341" width="1.8" height="15.0" fill="rgb(247,219,19)" rx="2" ry="2" />
<text  x="873.65" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::Validator::FormChecker::checkInstr (5 samples, 0.40%)</title><rect x="1178.8" y="389" width="4.6" height="15.0" fill="rgb(243,161,3)" rx="2" ry="2" />
<text  x="1181.76" y="399.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (1 samples, 0.08%)</title><rect x="924.0" y="309" width="1.0" height="15.0" fill="rgb(247,55,7)" rx="2" ry="2" />
<text  x="927.03" y="319.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (1 samples, 0.08%)</title><rect x="873.5" y="357" width="0.9" height="15.0" fill="rgb(249,154,27)" rx="2" ry="2" />
<text  x="876.46" y="367.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (1 samples, 0.08%)</title><rect x="873.5" y="325" width="0.9" height="15.0" fill="rgb(242,139,50)" rx="2" ry="2" />
<text  x="876.46" y="335.5" ></text>
</g>
<g >
<title>WasmEdge::FileMgr::readU32 (1 samples, 0.08%)</title><rect x="21.2" y="293" width="1.0" height="15.0" fill="rgb(248,2,14)" rx="2" ry="2" />
<text  x="24.24" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.08%)</title><rect x="10.0" y="725" width="0.9" height="15.0" fill="rgb(221,71,43)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;std::unique_ptr&lt;WasmEdge::AST::Module, std::default_delete&lt;WasmEdge::AST::Module&gt; &gt;, WasmEdge::ErrCode, false, true&gt;::~expected_storage_base (1 samples, 0.08%)</title><rect x="1183.4" y="389" width="1.0" height="15.0" fill="rgb(211,153,53)" rx="2" ry="2" />
<text  x="1186.44" y="399.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (6 samples, 0.48%)</title><rect x="1173.1" y="389" width="5.7" height="15.0" fill="rgb(253,169,54)" rx="2" ry="2" />
<text  x="1176.14" y="399.5" ></text>
</g>
<g >
<title>schedule_tail (1 samples, 0.08%)</title><rect x="12.8" y="709" width="0.9" height="15.0" fill="rgb(250,126,33)" rx="2" ry="2" />
<text  x="15.81" y="719.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runBrOp (4 samples, 0.32%)</title><rect x="473.6" y="405" width="3.7" height="15.0" fill="rgb(248,27,24)" rx="2" ry="2" />
<text  x="476.57" y="415.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (1 samples, 0.08%)</title><rect x="924.0" y="341" width="1.0" height="15.0" fill="rgb(232,130,25)" rx="2" ry="2" />
<text  x="927.03" y="351.5" ></text>
</g>
<g >
<title>std::variant&lt;WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::~variant (2 samples, 0.16%)</title><rect x="1185.3" y="485" width="1.9" height="15.0" fill="rgb(211,73,51)" rx="2" ry="2" />
<text  x="1188.32" y="495.5" ></text>
</g>
<g >
<title>std::__atomic_futex_unsigned&lt;2147483648u&gt;::_M_load_when_equal (1 samples, 0.08%)</title><rect x="1184.4" y="629" width="0.9" height="15.0" fill="rgb(211,53,17)" rx="2" ry="2" />
<text  x="1187.38" y="639.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (2 samples, 0.16%)</title><rect x="639.3" y="373" width="1.9" height="15.0" fill="rgb(252,162,23)" rx="2" ry="2" />
<text  x="642.33" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadSegment (13 samples, 1.03%)</title><rect x="13.7" y="389" width="12.2" height="15.0" fill="rgb(219,79,10)" rx="2" ry="2" />
<text  x="16.75" y="399.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.08%)</title><rect x="12.8" y="725" width="0.9" height="15.0" fill="rgb(219,41,0)" rx="2" ry="2" />
<text  x="15.81" y="735.5" ></text>
</g>
<g >
<title>__run_exit_handlers (1 samples, 0.08%)</title><rect x="11.9" y="725" width="0.9" height="15.0" fill="rgb(236,76,28)" rx="2" ry="2" />
<text  x="14.87" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;WasmEdge::AST::Instruction&gt;::deallocate (2 samples, 0.16%)</title><rect x="1185.3" y="133" width="1.9" height="15.0" fill="rgb(236,70,18)" rx="2" ry="2" />
<text  x="1188.32" y="143.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::ModuleInstance::unsafeGetGlobal (3 samples, 0.24%)</title><rect x="511.0" y="373" width="2.8" height="15.0" fill="rgb(217,114,8)" rx="2" ry="2" />
<text  x="514.03" y="383.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (3 samples, 0.24%)</title><rect x="916.5" y="389" width="2.8" height="15.0" fill="rgb(244,105,26)" rx="2" ry="2" />
<text  x="919.54" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;WasmEdge::Runtime::Instance::MemoryInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::MemoryInstance&gt; &gt;::~unique_ptr (1 samples, 0.08%)</title><rect x="1187.2" y="533" width="0.9" height="15.0" fill="rgb(211,86,10)" rx="2" ry="2" />
<text  x="1190.19" y="543.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (9 samples, 0.71%)</title><rect x="583.1" y="325" width="8.5" height="15.0" fill="rgb(228,223,22)" rx="2" ry="2" />
<text  x="586.14" y="335.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (2 samples, 0.16%)</title><rect x="868.8" y="373" width="1.9" height="15.0" fill="rgb(245,137,27)" rx="2" ry="2" />
<text  x="871.78" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;true, std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.16%)</title><rect x="1185.3" y="293" width="1.9" height="15.0" fill="rgb(208,109,45)" rx="2" ry="2" />
<text  x="1188.32" y="303.5" ></text>
</g>
<g >
<title>perf_event_exec (1 samples, 0.08%)</title><rect x="10.0" y="613" width="0.9" height="15.0" fill="rgb(254,114,35)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1 samples, 0.08%)</title><rect x="10.0" y="693" width="0.9" height="15.0" fill="rgb(222,163,49)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction::~WasmFunction (2 samples, 0.16%)</title><rect x="1185.3" y="213" width="1.9" height="15.0" fill="rgb(241,67,3)" rx="2" ry="2" />
<text  x="1188.32" y="223.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (36 samples, 2.86%)</title><rect x="874.4" y="309" width="33.7" height="15.0" fill="rgb(242,186,19)" rx="2" ry="2" />
<text  x="877.40" y="319.5" >cx..</text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::_Variant_storage&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_M_reset_impl (2 samples, 0.16%)</title><rect x="1185.3" y="277" width="1.9" height="15.0" fill="rgb(244,91,37)" rx="2" ry="2" />
<text  x="1188.32" y="287.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runLtOp&lt;unsigned int&gt; (2 samples, 0.16%)</title><rect x="870.7" y="405" width="1.8" height="15.0" fill="rgb(251,176,51)" rx="2" ry="2" />
<text  x="873.65" y="415.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.16%)</title><rect x="1188.1" y="597" width="1.9" height="15.0" fill="rgb(207,118,28)" rx="2" ry="2" />
<text  x="1191.13" y="607.5" ></text>
</g>
<g >
<title>std::__invoke&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1,250 samples, 99.21%)</title><rect x="13.7" y="565" width="1170.7" height="15.0" fill="rgb(221,185,45)" rx="2" ry="2" />
<text  x="16.75" y="575.5" >std::__invoke&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned ..</text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (1 samples, 0.08%)</title><rect x="873.5" y="373" width="0.9" height="15.0" fill="rgb(247,98,2)" rx="2" ry="2" />
<text  x="876.46" y="383.5" ></text>
</g>
<g >
<title>preempt_schedule_common (1 samples, 0.08%)</title><rect x="1187.2" y="325" width="0.9" height="15.0" fill="rgb(237,28,31)" rx="2" ry="2" />
<text  x="1190.19" y="335.5" ></text>
</g>
<g >
<title>mmput (2 samples, 0.16%)</title><rect x="1188.1" y="661" width="1.9" height="15.0" fill="rgb(248,203,2)" rx="2" ry="2" />
<text  x="1191.13" y="671.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (13 samples, 1.03%)</title><rect x="619.7" y="293" width="12.1" height="15.0" fill="rgb(220,127,46)" rx="2" ry="2" />
<text  x="622.67" y="303.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (9 samples, 0.71%)</title><rect x="908.1" y="341" width="8.4" height="15.0" fill="rgb(239,178,3)" rx="2" ry="2" />
<text  x="911.11" y="351.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (5 samples, 0.40%)</title><rect x="919.3" y="309" width="4.7" height="15.0" fill="rgb(212,106,11)" rx="2" ry="2" />
<text  x="922.35" y="319.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runLeOp&lt;int&gt; (4 samples, 0.32%)</title><rect x="642.1" y="405" width="3.8" height="15.0" fill="rgb(228,99,5)" rx="2" ry="2" />
<text  x="645.14" y="415.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.08%)</title><rect x="1187.2" y="309" width="0.9" height="15.0" fill="rgb(224,208,35)" rx="2" ry="2" />
<text  x="1190.19" y="319.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (1 samples, 0.08%)</title><rect x="873.5" y="389" width="0.9" height="15.0" fill="rgb(229,85,53)" rx="2" ry="2" />
<text  x="876.46" y="399.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.08%)</title><rect x="532.6" y="213" width="0.9" height="15.0" fill="rgb(210,29,34)" rx="2" ry="2" />
<text  x="535.57" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Runtime::StackManager::Frame, std::allocator&lt;WasmEdge::Runtime::StackManager::Frame&gt; &gt;::empty (1 samples, 0.08%)</title><rect x="927.8" y="373" width="0.9" height="15.0" fill="rgb(212,84,16)" rx="2" ry="2" />
<text  x="930.78" y="383.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (6 samples, 0.48%)</title><rect x="533.5" y="229" width="5.6" height="15.0" fill="rgb(214,58,10)" rx="2" ry="2" />
<text  x="536.51" y="239.5" ></text>
</g>
<g >
<title>__GI___clone (1,251 samples, 99.29%)</title><rect x="12.8" y="741" width="1171.6" height="15.0" fill="rgb(221,43,3)" rx="2" ry="2" />
<text  x="15.81" y="751.5" >__GI___clone</text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.08%)</title><rect x="1187.2" y="389" width="0.9" height="15.0" fill="rgb(215,204,49)" rx="2" ry="2" />
<text  x="1190.19" y="399.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.08%)</title><rect x="1184.4" y="565" width="0.9" height="15.0" fill="rgb(208,162,28)" rx="2" ry="2" />
<text  x="1187.38" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::~_Variant_storage (2 samples, 0.16%)</title><rect x="1185.3" y="389" width="1.9" height="15.0" fill="rgb(218,68,26)" rx="2" ry="2" />
<text  x="1188.32" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.08%)</title><rect x="866.0" y="341" width="0.9" height="15.0" fill="rgb(226,44,26)" rx="2" ry="2" />
<text  x="868.97" y="351.5" ></text>
</g>
<g >
<title>operator (1 samples, 0.08%)</title><rect x="25.9" y="437" width="1.0" height="15.0" fill="rgb(236,114,24)" rx="2" ry="2" />
<text  x="28.92" y="447.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (3 samples, 0.24%)</title><rect x="916.5" y="373" width="2.8" height="15.0" fill="rgb(254,174,52)" rx="2" ry="2" />
<text  x="919.54" y="383.5" ></text>
</g>
<g >
<title>all (1,260 samples, 100%)</title><rect x="10.0" y="773" width="1180.0" height="15.0" fill="rgb(232,160,49)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>std::apply&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1,250 samples, 99.21%)</title><rect x="13.7" y="597" width="1170.7" height="15.0" fill="rgb(218,140,43)" rx="2" ry="2" />
<text  x="16.75" y="607.5" >std::apply&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned lon..</text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (1 samples, 0.08%)</title><rect x="532.6" y="197" width="0.9" height="15.0" fill="rgb(213,29,27)" rx="2" ry="2" />
<text  x="535.57" y="207.5" ></text>
</g>
<g >
<title>std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt;::operator (2 samples, 0.16%)</title><rect x="1185.3" y="517" width="1.9" height="15.0" fill="rgb(231,222,20)" rx="2" ry="2" />
<text  x="1188.32" y="527.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runFunction (1,230 samples, 97.62%)</title><rect x="26.9" y="453" width="1151.9" height="15.0" fill="rgb(251,118,15)" rx="2" ry="2" />
<text  x="29.86" y="463.5" >WasmEdge::Executor::Executor::runFunction</text>
</g>
<g >
<title>handle_mm_fault (10 samples, 0.79%)</title><rect x="532.6" y="309" width="9.3" height="15.0" fill="rgb(225,29,17)" rx="2" ry="2" />
<text  x="535.57" y="319.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::ModuleInstance::unsafeGetGlobal (18 samples, 1.43%)</title><rect x="493.2" y="373" width="16.9" height="15.0" fill="rgb(221,12,42)" rx="2" ry="2" />
<text  x="496.24" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runBrIfOp (201 samples, 15.95%)</title><rect x="279.7" y="389" width="188.3" height="15.0" fill="rgb(221,40,17)" rx="2" ry="2" />
<text  x="282.71" y="399.5" >WasmEdge::Executor::Exec..</text>
</g>
<g >
<title>lock_page_lruvec_irqsave (1 samples, 0.08%)</title><rect x="538.2" y="213" width="0.9" height="15.0" fill="rgb(226,225,38)" rx="2" ry="2" />
<text  x="541.19" y="223.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::ModuleInstance::~ModuleInstance (3 samples, 0.24%)</title><rect x="1185.3" y="629" width="2.8" height="15.0" fill="rgb(245,16,2)" rx="2" ry="2" />
<text  x="1188.32" y="639.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (1 samples, 0.08%)</title><rect x="1183.4" y="37" width="1.0" height="15.0" fill="rgb(253,4,41)" rx="2" ry="2" />
<text  x="1186.44" y="47.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (2 samples, 0.16%)</title><rect x="870.7" y="373" width="1.8" height="15.0" fill="rgb(236,185,2)" rx="2" ry="2" />
<text  x="873.65" y="383.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.08%)</title><rect x="1184.4" y="469" width="0.9" height="15.0" fill="rgb(221,96,14)" rx="2" ry="2" />
<text  x="1187.38" y="479.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (13 samples, 1.03%)</title><rect x="619.7" y="277" width="12.1" height="15.0" fill="rgb(220,68,14)" rx="2" ry="2" />
<text  x="622.67" y="287.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (13 samples, 1.03%)</title><rect x="619.7" y="325" width="12.1" height="15.0" fill="rgb(206,189,17)" rx="2" ry="2" />
<text  x="622.67" y="335.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.08%)</title><rect x="1184.4" y="485" width="0.9" height="15.0" fill="rgb(210,27,5)" rx="2" ry="2" />
<text  x="1187.38" y="495.5" ></text>
</g>
<g >
<title>begin_new_exec (1 samples, 0.08%)</title><rect x="10.0" y="629" width="0.9" height="15.0" fill="rgb(235,151,16)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.08%)</title><rect x="11.9" y="709" width="0.9" height="15.0" fill="rgb(252,84,26)" rx="2" ry="2" />
<text  x="14.87" y="719.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (7 samples, 0.56%)</title><rect x="632.8" y="373" width="6.5" height="15.0" fill="rgb(210,3,3)" rx="2" ry="2" />
<text  x="635.78" y="383.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (9 samples, 0.71%)</title><rect x="583.1" y="373" width="8.5" height="15.0" fill="rgb(235,62,2)" rx="2" ry="2" />
<text  x="586.14" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::branchToLabel (3 samples, 0.24%)</title><rect x="474.5" y="389" width="2.8" height="15.0" fill="rgb(231,9,29)" rx="2" ry="2" />
<text  x="477.51" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::_M_deallocate (1 samples, 0.08%)</title><rect x="1183.4" y="117" width="1.0" height="15.0" fill="rgb(250,94,49)" rx="2" ry="2" />
<text  x="1186.44" y="127.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.08%)</title><rect x="11.9" y="629" width="0.9" height="15.0" fill="rgb(223,161,20)" rx="2" ry="2" />
<text  x="14.87" y="639.5" ></text>
</g>
<g >
<title>WasmEdge::Validator::FormChecker::StackTrans (2 samples, 0.16%)</title><rect x="1178.8" y="373" width="1.8" height="15.0" fill="rgb(238,120,48)" rx="2" ry="2" />
<text  x="1181.76" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::MemoryInstance::~MemoryInstance (1 samples, 0.08%)</title><rect x="1187.2" y="501" width="0.9" height="15.0" fill="rgb(206,187,26)" rx="2" ry="2" />
<text  x="1190.19" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (142 samples, 11.27%)</title><rect x="930.6" y="389" width="133.0" height="15.0" fill="rgb(218,105,53)" rx="2" ry="2" />
<text  x="933.59" y="399.5" >std::vector&lt;Wasm..</text>
</g>
<g >
<title>WasmEdge::Executor::Executor::execute (1 samples, 0.08%)</title><rect x="10.9" y="741" width="1.0" height="15.0" fill="rgb(214,205,32)" rx="2" ry="2" />
<text  x="13.94" y="751.5" ></text>
</g>
<g >
<title>irqentry_exit (3 samples, 0.24%)</title><rect x="544.7" y="389" width="2.9" height="15.0" fill="rgb(232,114,24)" rx="2" ry="2" />
<text  x="547.75" y="399.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.16%)</title><rect x="1188.1" y="613" width="1.9" height="15.0" fill="rgb(226,88,15)" rx="2" ry="2" />
<text  x="1191.13" y="623.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;WasmEdge::AST::CodeSegment*, WasmEdge::AST::CodeSegment&gt; (1 samples, 0.08%)</title><rect x="1183.4" y="261" width="1.0" height="15.0" fill="rgb(210,107,33)" rx="2" ry="2" />
<text  x="1186.44" y="271.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (5 samples, 0.40%)</title><rect x="919.3" y="341" width="4.7" height="15.0" fill="rgb(239,77,23)" rx="2" ry="2" />
<text  x="922.35" y="351.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1,250 samples, 99.21%)</title><rect x="13.7" y="661" width="1170.7" height="15.0" fill="rgb(225,148,16)" rx="2" ry="2" />
<text  x="16.75" y="671.5" >std::thread::_Invoker&lt;std::tuple&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double,..</text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::pop (1 samples, 0.08%)</title><rect x="482.0" y="389" width="0.9" height="15.0" fill="rgb(212,121,40)" rx="2" ry="2" />
<text  x="485.00" y="399.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (7 samples, 0.56%)</title><rect x="632.8" y="341" width="6.5" height="15.0" fill="rgb(220,3,35)" rx="2" ry="2" />
<text  x="635.78" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt;*&gt; (2 samples, 0.16%)</title><rect x="1185.3" y="581" width="1.9" height="15.0" fill="rgb(249,112,47)" rx="2" ry="2" />
<text  x="1188.32" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::construct&lt;WasmEdge::AST::Instruction, WasmEdge::OpCode&amp;, unsigned long&amp;&gt; (2 samples, 0.16%)</title><rect x="22.2" y="325" width="1.8" height="15.0" fill="rgb(233,169,24)" rx="2" ry="2" />
<text  x="25.17" y="335.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (1 samples, 0.08%)</title><rect x="641.2" y="357" width="0.9" height="15.0" fill="rgb(238,19,53)" rx="2" ry="2" />
<text  x="644.21" y="367.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt;*, std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt; &gt; (2 samples, 0.16%)</title><rect x="1185.3" y="597" width="1.9" height="15.0" fill="rgb(238,207,28)" rx="2" ry="2" />
<text  x="1188.32" y="607.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait (1 samples, 0.08%)</title><rect x="1184.4" y="645" width="0.9" height="15.0" fill="rgb(227,14,8)" rx="2" ry="2" />
<text  x="1187.38" y="655.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runStoreOp&lt;unsigned int, 32u&gt; (11 samples, 0.87%)</title><rect x="531.6" y="405" width="10.3" height="15.0" fill="rgb(240,60,44)" rx="2" ry="2" />
<text  x="534.63" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::emplace_back&lt;WasmEdge::AST::Instruction&gt; (1 samples, 0.08%)</title><rect x="25.9" y="373" width="1.0" height="15.0" fill="rgb(235,90,22)" rx="2" ry="2" />
<text  x="28.92" y="383.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (3 samples, 0.24%)</title><rect x="544.7" y="373" width="2.9" height="15.0" fill="rgb(209,41,3)" rx="2" ry="2" />
<text  x="547.75" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.08%)</title><rect x="925.0" y="373" width="0.9" height="15.0" fill="rgb(222,25,14)" rx="2" ry="2" />
<text  x="927.97" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runGtOp&lt;int&gt; (3 samples, 0.24%)</title><rect x="639.3" y="405" width="2.8" height="15.0" fill="rgb(253,97,24)" rx="2" ry="2" />
<text  x="642.33" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;WasmEdge::AST::CodeSegment*&gt; (1 samples, 0.08%)</title><rect x="1183.4" y="229" width="1.0" height="15.0" fill="rgb(224,5,30)" rx="2" ry="2" />
<text  x="1186.44" y="239.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.08%)</title><rect x="1188.1" y="549" width="1.0" height="15.0" fill="rgb(235,218,2)" rx="2" ry="2" />
<text  x="1191.13" y="559.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (5 samples, 0.40%)</title><rect x="919.3" y="357" width="4.7" height="15.0" fill="rgb(210,194,14)" rx="2" ry="2" />
<text  x="922.35" y="367.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (3 samples, 0.24%)</title><rect x="544.7" y="357" width="2.9" height="15.0" fill="rgb(245,121,24)" rx="2" ry="2" />
<text  x="547.75" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::invoke (1,230 samples, 97.62%)</title><rect x="26.9" y="469" width="1151.9" height="15.0" fill="rgb(237,141,20)" rx="2" ry="2" />
<text  x="29.86" y="479.5" >WasmEdge::Executor::Executor::invoke</text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::MemoryInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::MemoryInstance&gt; &gt;*&gt; (1 samples, 0.08%)</title><rect x="1187.2" y="565" width="0.9" height="15.0" fill="rgb(253,32,43)" rx="2" ry="2" />
<text  x="1190.19" y="575.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.08%)</title><rect x="11.9" y="613" width="0.9" height="15.0" fill="rgb(221,153,38)" rx="2" ry="2" />
<text  x="14.87" y="623.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::getTop (1 samples, 0.08%)</title><rect x="925.0" y="405" width="0.9" height="15.0" fill="rgb(245,57,43)" rx="2" ry="2" />
<text  x="927.97" y="415.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (2 samples, 0.16%)</title><rect x="870.7" y="325" width="1.8" height="15.0" fill="rgb(223,156,54)" rx="2" ry="2" />
<text  x="873.65" y="335.5" ></text>
</g>
<g >
<title>do_exit (2 samples, 0.16%)</title><rect x="1188.1" y="677" width="1.9" height="15.0" fill="rgb(230,126,6)" rx="2" ry="2" />
<text  x="1191.13" y="687.5" ></text>
</g>
<g >
<title>WasmEdge::Validator::FormChecker::checkExpr (5 samples, 0.40%)</title><rect x="1178.8" y="421" width="4.6" height="15.0" fill="rgb(254,22,0)" rx="2" ry="2" />
<text  x="1181.76" y="431.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (9 samples, 0.71%)</title><rect x="908.1" y="357" width="8.4" height="15.0" fill="rgb(210,152,54)" rx="2" ry="2" />
<text  x="911.11" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::deallocate (1 samples, 0.08%)</title><rect x="25.9" y="325" width="1.0" height="15.0" fill="rgb(240,120,40)" rx="2" ry="2" />
<text  x="28.92" y="335.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::push&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (117 samples, 9.29%)</title><rect x="1063.6" y="405" width="109.5" height="15.0" fill="rgb(234,168,16)" rx="2" ry="2" />
<text  x="1066.57" y="415.5" >WasmEdge::Run..</text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (116 samples, 9.21%)</title><rect x="1064.5" y="389" width="108.6" height="15.0" fill="rgb(244,185,23)" rx="2" ry="2" />
<text  x="1067.51" y="399.5" >std::vector&lt;W..</text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.08%)</title><rect x="1188.1" y="517" width="1.0" height="15.0" fill="rgb(238,1,35)" rx="2" ry="2" />
<text  x="1191.13" y="527.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (9 samples, 0.71%)</title><rect x="908.1" y="309" width="8.4" height="15.0" fill="rgb(223,86,33)" rx="2" ry="2" />
<text  x="911.11" y="319.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (36 samples, 2.86%)</title><rect x="874.4" y="325" width="33.7" height="15.0" fill="rgb(220,109,53)" rx="2" ry="2" />
<text  x="877.40" y="335.5" >cx..</text>
</g>
<g >
<title>wasmedge_origin (1,259 samples, 99.92%)</title><rect x="10.9" y="757" width="1179.1" height="15.0" fill="rgb(217,217,13)" rx="2" ry="2" />
<text  x="13.94" y="767.5" >wasmedge_origin</text>
</g>
<g >
<title>std::_Vector_base&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::~_Vector_base (2 samples, 0.16%)</title><rect x="1185.3" y="181" width="1.9" height="15.0" fill="rgb(224,210,24)" rx="2" ry="2" />
<text  x="1188.32" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::operator[] (1 samples, 0.08%)</title><rect x="25.0" y="341" width="0.9" height="15.0" fill="rgb(224,94,21)" rx="2" ry="2" />
<text  x="27.98" y="351.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.08%)</title><rect x="25.9" y="181" width="1.0" height="15.0" fill="rgb(230,166,9)" rx="2" ry="2" />
<text  x="28.92" y="191.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (6 samples, 0.48%)</title><rect x="1173.1" y="405" width="5.7" height="15.0" fill="rgb(225,63,36)" rx="2" ry="2" />
<text  x="1176.14" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;WasmEdge::AST::CodeSegment*&gt; (1 samples, 0.08%)</title><rect x="1183.4" y="245" width="1.0" height="15.0" fill="rgb(253,198,10)" rx="2" ry="2" />
<text  x="1186.44" y="255.5" ></text>
</g>
<g >
<title>WasmEdge::AST::Instruction::getNum (8 samples, 0.63%)</title><rect x="547.6" y="405" width="7.4" height="15.0" fill="rgb(234,84,1)" rx="2" ry="2" />
<text  x="550.56" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.08%)</title><rect x="1187.2" y="405" width="0.9" height="15.0" fill="rgb(224,169,51)" rx="2" ry="2" />
<text  x="1190.19" y="415.5" ></text>
</g>
<g >
<title>std::__atomic_futex_unsigned&lt;2147483648u&gt;::_M_load_and_test_until (1 samples, 0.08%)</title><rect x="1184.4" y="597" width="0.9" height="15.0" fill="rgb(241,21,24)" rx="2" ry="2" />
<text  x="1187.38" y="607.5" ></text>
</g>
<g >
<title>WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (2 samples, 0.16%)</title><rect x="639.3" y="389" width="1.9" height="15.0" fill="rgb(236,141,10)" rx="2" ry="2" />
<text  x="642.33" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;WasmEdge::AST::CodeSegment&gt; (1 samples, 0.08%)</title><rect x="1183.4" y="213" width="1.0" height="15.0" fill="rgb(246,32,52)" rx="2" ry="2" />
<text  x="1186.44" y="223.5" ></text>
</g>
<g >
<title>WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (8 samples, 0.63%)</title><rect x="547.6" y="373" width="7.4" height="15.0" fill="rgb(248,212,1)" rx="2" ry="2" />
<text  x="550.56" y="383.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (5 samples, 0.40%)</title><rect x="919.3" y="373" width="4.7" height="15.0" fill="rgb(229,165,31)" rx="2" ry="2" />
<text  x="922.35" y="383.5" ></text>
</g>
<g >
<title>operator (13 samples, 1.03%)</title><rect x="13.7" y="437" width="12.2" height="15.0" fill="rgb(224,183,42)" rx="2" ry="2" />
<text  x="16.75" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::~vector (1 samples, 0.08%)</title><rect x="1183.4" y="149" width="1.0" height="15.0" fill="rgb(250,100,30)" rx="2" ry="2" />
<text  x="1186.44" y="159.5" ></text>
</g>
<g >
<title>do_group_exit (2 samples, 0.16%)</title><rect x="1188.1" y="693" width="1.9" height="15.0" fill="rgb(244,141,5)" rx="2" ry="2" />
<text  x="1191.13" y="703.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.08%)</title><rect x="25.9" y="245" width="1.0" height="15.0" fill="rgb(232,17,17)" rx="2" ry="2" />
<text  x="28.92" y="255.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.08%)</title><rect x="12.8" y="693" width="0.9" height="15.0" fill="rgb(209,159,27)" rx="2" ry="2" />
<text  x="15.81" y="703.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.16%)</title><rect x="1188.1" y="629" width="1.9" height="15.0" fill="rgb(208,53,39)" rx="2" ry="2" />
<text  x="1191.13" y="639.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (5 samples, 0.40%)</title><rect x="919.3" y="293" width="4.7" height="15.0" fill="rgb(236,189,38)" rx="2" ry="2" />
<text  x="922.35" y="303.5" ></text>
</g>
<g >
<title>std::__shared_mutex_pthread::lock_shared (7 samples, 0.56%)</title><rect x="484.8" y="341" width="6.6" height="15.0" fill="rgb(230,199,28)" rx="2" ry="2" />
<text  x="487.81" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::Validator::Validator::validate (5 samples, 0.40%)</title><rect x="1178.8" y="453" width="4.6" height="15.0" fill="rgb(246,85,28)" rx="2" ry="2" />
<text  x="1181.76" y="463.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runCallOp (9 samples, 0.71%)</title><rect x="482.9" y="405" width="8.5" height="15.0" fill="rgb(206,123,30)" rx="2" ry="2" />
<text  x="485.94" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Runtime::StackManager::Frame, std::allocator&lt;WasmEdge::Runtime::StackManager::Frame&gt; &gt;::size (2 samples, 0.16%)</title><rect x="928.7" y="389" width="1.9" height="15.0" fill="rgb(251,24,52)" rx="2" ry="2" />
<text  x="931.71" y="399.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadModule (14 samples, 1.11%)</title><rect x="13.7" y="485" width="13.2" height="15.0" fill="rgb(227,130,7)" rx="2" ry="2" />
<text  x="16.75" y="495.5" ></text>
</g>
<g >
<title>WasmEdge::Validator::Validator::validate (5 samples, 0.40%)</title><rect x="1178.8" y="485" width="4.6" height="15.0" fill="rgb(212,223,7)" rx="2" ry="2" />
<text  x="1181.76" y="495.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (8 samples, 0.63%)</title><rect x="547.6" y="357" width="7.4" height="15.0" fill="rgb(227,164,12)" rx="2" ry="2" />
<text  x="550.56" y="367.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (2 samples, 0.16%)</title><rect x="868.8" y="389" width="1.9" height="15.0" fill="rgb(247,156,53)" rx="2" ry="2" />
<text  x="871.78" y="399.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::MemoryInstance::storeValue&lt;unsigned int, 4u&gt; (11 samples, 0.87%)</title><rect x="531.6" y="389" width="10.3" height="15.0" fill="rgb(245,126,14)" rx="2" ry="2" />
<text  x="534.63" y="399.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runLocalTeeOp (14 samples, 1.11%)</title><rect x="853.8" y="405" width="13.1" height="15.0" fill="rgb(232,111,49)" rx="2" ry="2" />
<text  x="856.79" y="415.5" ></text>
</g>
<g >
<title>WasmEdge::FileMgr::readS32 (4 samples, 0.32%)</title><rect x="14.7" y="325" width="3.7" height="15.0" fill="rgb(242,204,23)" rx="2" ry="2" />
<text  x="17.68" y="335.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (7 samples, 0.56%)</title><rect x="632.8" y="277" width="6.5" height="15.0" fill="rgb(207,156,2)" rx="2" ry="2" />
<text  x="635.78" y="287.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (1 samples, 0.08%)</title><rect x="873.5" y="277" width="0.9" height="15.0" fill="rgb(249,5,36)" rx="2" ry="2" />
<text  x="876.46" y="287.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runShrOp&lt;int&gt; (9 samples, 0.71%)</title><rect x="908.1" y="405" width="8.4" height="15.0" fill="rgb(227,117,3)" rx="2" ry="2" />
<text  x="911.11" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::_Variant_storage&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_M_reset_impl (2 samples, 0.16%)</title><rect x="1185.3" y="261" width="1.9" height="15.0" fill="rgb(241,159,32)" rx="2" ry="2" />
<text  x="1188.32" y="271.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (2 samples, 0.16%)</title><rect x="868.8" y="325" width="1.9" height="15.0" fill="rgb(214,136,3)" rx="2" ry="2" />
<text  x="871.78" y="335.5" ></text>
</g>
<g >
<title>lru_cache_add (6 samples, 0.48%)</title><rect x="533.5" y="245" width="5.6" height="15.0" fill="rgb(254,113,24)" rx="2" ry="2" />
<text  x="536.51" y="255.5" ></text>
</g>
<g >
<title>std::__invoke&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1,250 samples, 99.21%)</title><rect x="13.7" y="645" width="1170.7" height="15.0" fill="rgb(208,135,14)" rx="2" ry="2" />
<text  x="16.75" y="655.5" >std::__invoke&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128,..</text>
</g>
<g >
<title>WasmEdge::Executor::Executor::execute (370 samples, 29.37%)</title><rect x="198.2" y="421" width="346.5" height="15.0" fill="rgb(227,31,26)" rx="2" ry="2" />
<text  x="201.24" y="431.5" >WasmEdge::Executor::Executor::execute</text>
</g>
<g >
<title>std::_Vector_base&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::~_Vector_base (1 samples, 0.08%)</title><rect x="1183.4" y="133" width="1.0" height="15.0" fill="rgb(230,150,5)" rx="2" ry="2" />
<text  x="1186.44" y="143.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (9 samples, 0.71%)</title><rect x="908.1" y="293" width="8.4" height="15.0" fill="rgb(209,117,3)" rx="2" ry="2" />
<text  x="911.11" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;true, std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.16%)</title><rect x="1185.3" y="325" width="1.9" height="15.0" fill="rgb(244,127,16)" rx="2" ry="2" />
<text  x="1188.32" y="335.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (1 samples, 0.08%)</title><rect x="641.2" y="389" width="0.9" height="15.0" fill="rgb(212,57,17)" rx="2" ry="2" />
<text  x="644.21" y="399.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.16%)</title><rect x="536.3" y="197" width="1.9" height="15.0" fill="rgb(221,50,23)" rx="2" ry="2" />
<text  x="539.32" y="207.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::pop (4 samples, 0.32%)</title><rect x="850.0" y="389" width="3.8" height="15.0" fill="rgb(234,11,9)" rx="2" ry="2" />
<text  x="853.05" y="399.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::push&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (139 samples, 11.03%)</title><rect x="700.2" y="389" width="130.2" height="15.0" fill="rgb(239,209,52)" rx="2" ry="2" />
<text  x="703.21" y="399.5" >WasmEdge::Runtim..</text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runShlOp&lt;unsigned int&gt; (36 samples, 2.86%)</title><rect x="874.4" y="405" width="33.7" height="15.0" fill="rgb(207,17,13)" rx="2" ry="2" />
<text  x="877.40" y="415.5" >Wa..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::~_Copy_assign_base (2 samples, 0.16%)</title><rect x="1185.3" y="437" width="1.9" height="15.0" fill="rgb(248,134,53)" rx="2" ry="2" />
<text  x="1188.32" y="447.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (8 samples, 0.63%)</title><rect x="547.6" y="341" width="7.4" height="15.0" fill="rgb(243,140,41)" rx="2" ry="2" />
<text  x="550.56" y="351.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.08%)</title><rect x="1188.1" y="533" width="1.0" height="15.0" fill="rgb(250,54,43)" rx="2" ry="2" />
<text  x="1191.13" y="543.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::ModuleInstance::unsafeGetMemory (16 samples, 1.27%)</title><rect x="255.4" y="389" width="14.9" height="15.0" fill="rgb(228,14,53)" rx="2" ry="2" />
<text  x="258.37" y="399.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (2 samples, 0.16%)</title><rect x="868.8" y="341" width="1.9" height="15.0" fill="rgb(214,85,23)" rx="2" ry="2" />
<text  x="871.78" y="351.5" ></text>
</g>
<g >
<title>std::shared_lock&lt;std::shared_mutex&gt;::shared_lock (7 samples, 0.56%)</title><rect x="484.8" y="373" width="6.6" height="15.0" fill="rgb(235,53,49)" rx="2" ry="2" />
<text  x="487.81" y="383.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (36 samples, 2.86%)</title><rect x="874.4" y="373" width="33.7" height="15.0" fill="rgb(209,63,7)" rx="2" ry="2" />
<text  x="877.40" y="383.5" >cx..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;true, std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.16%)</title><rect x="1185.3" y="309" width="1.9" height="15.0" fill="rgb(223,224,44)" rx="2" ry="2" />
<text  x="1188.32" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (5 samples, 0.40%)</title><rect x="1058.9" y="357" width="4.7" height="15.0" fill="rgb(216,65,28)" rx="2" ry="2" />
<text  x="1061.89" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runBrOp (201 samples, 15.95%)</title><rect x="279.7" y="373" width="188.3" height="15.0" fill="rgb(241,197,5)" rx="2" ry="2" />
<text  x="282.71" y="383.5" >WasmEdge::Executor::Exec..</text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (7 samples, 0.56%)</title><rect x="632.8" y="293" width="6.5" height="15.0" fill="rgb(238,156,42)" rx="2" ry="2" />
<text  x="635.78" y="303.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (1 samples, 0.08%)</title><rect x="25.9" y="261" width="1.0" height="15.0" fill="rgb(254,42,15)" rx="2" ry="2" />
<text  x="28.92" y="271.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::getTopN (58 samples, 4.60%)</title><rect x="645.9" y="389" width="54.3" height="15.0" fill="rgb(221,182,38)" rx="2" ry="2" />
<text  x="648.89" y="399.5" >WasmE..</text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (1 samples, 0.08%)</title><rect x="924.0" y="357" width="1.0" height="15.0" fill="rgb(207,40,38)" rx="2" ry="2" />
<text  x="927.03" y="367.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;WasmEdge::AST::Instruction*&gt; (1 samples, 0.08%)</title><rect x="24.0" y="293" width="1.0" height="15.0" fill="rgb(238,178,17)" rx="2" ry="2" />
<text  x="27.05" y="303.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (36 samples, 2.86%)</title><rect x="874.4" y="341" width="33.7" height="15.0" fill="rgb(209,124,26)" rx="2" ry="2" />
<text  x="877.40" y="351.5" >cx..</text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (36 samples, 2.86%)</title><rect x="874.4" y="293" width="33.7" height="15.0" fill="rgb(239,77,33)" rx="2" ry="2" />
<text  x="877.40" y="303.5" >cx..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (3 samples, 0.24%)</title><rect x="851.0" y="341" width="2.8" height="15.0" fill="rgb(227,166,31)" rx="2" ry="2" />
<text  x="853.98" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (2 samples, 0.16%)</title><rect x="866.9" y="373" width="1.9" height="15.0" fill="rgb(253,75,31)" rx="2" ry="2" />
<text  x="869.90" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::pop (142 samples, 11.27%)</title><rect x="930.6" y="405" width="133.0" height="15.0" fill="rgb(224,29,28)" rx="2" ry="2" />
<text  x="933.59" y="415.5" >WasmEdge::Runtim..</text>
</g>
<g >
<title>__GI_munmap (1 samples, 0.08%)</title><rect x="1187.2" y="453" width="0.9" height="15.0" fill="rgb(210,184,40)" rx="2" ry="2" />
<text  x="1190.19" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1,250 samples, 99.21%)</title><rect x="13.7" y="629" width="1170.7" height="15.0" fill="rgb(239,51,4)" rx="2" ry="2" />
<text  x="16.75" y="639.5" >std::__invoke_impl&lt;void, WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigne..</text>
</g>
<g >
<title>__x64_sys_exit_group (2 samples, 0.16%)</title><rect x="1188.1" y="709" width="1.9" height="15.0" fill="rgb(215,7,8)" rx="2" ry="2" />
<text  x="1191.13" y="719.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (1 samples, 0.08%)</title><rect x="924.0" y="325" width="1.0" height="15.0" fill="rgb(215,50,50)" rx="2" ry="2" />
<text  x="927.03" y="335.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::getGlobInstByIdx (18 samples, 1.43%)</title><rect x="493.2" y="389" width="16.9" height="15.0" fill="rgb(233,212,36)" rx="2" ry="2" />
<text  x="496.24" y="399.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (28 samples, 2.22%)</title><rect x="593.4" y="373" width="26.3" height="15.0" fill="rgb(221,91,23)" rx="2" ry="2" />
<text  x="596.44" y="383.5" >W..</text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (2 samples, 0.16%)</title><rect x="868.8" y="277" width="1.9" height="15.0" fill="rgb(242,55,20)" rx="2" ry="2" />
<text  x="871.78" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.08%)</title><rect x="532.6" y="229" width="0.9" height="15.0" fill="rgb(253,200,20)" rx="2" ry="2" />
<text  x="535.57" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (11 samples, 0.87%)</title><rect x="531.6" y="325" width="10.3" height="15.0" fill="rgb(250,166,2)" rx="2" ry="2" />
<text  x="534.63" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_M_reset_impl (2 samples, 0.16%)</title><rect x="1185.3" y="357" width="1.9" height="15.0" fill="rgb(254,43,3)" rx="2" ry="2" />
<text  x="1188.32" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::Validator::FormChecker::validate (5 samples, 0.40%)</title><rect x="1178.8" y="437" width="4.6" height="15.0" fill="rgb(212,182,22)" rx="2" ry="2" />
<text  x="1181.76" y="447.5" ></text>
</g>
<g >
<title>operator (1 samples, 0.08%)</title><rect x="21.2" y="325" width="1.0" height="15.0" fill="rgb(225,209,22)" rx="2" ry="2" />
<text  x="24.24" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::MemoryInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::MemoryInstance&gt; &gt;*, std::unique_ptr&lt;WasmEdge::Runtime::Instance::MemoryInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::MemoryInstance&gt; &gt; &gt; (1 samples, 0.08%)</title><rect x="1187.2" y="597" width="0.9" height="15.0" fill="rgb(250,2,32)" rx="2" ry="2" />
<text  x="1190.19" y="607.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runLocalSetOp (25 samples, 1.98%)</title><rect x="830.4" y="405" width="23.4" height="15.0" fill="rgb(222,227,23)" rx="2" ry="2" />
<text  x="833.38" y="415.5" >W..</text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (2 samples, 0.16%)</title><rect x="868.8" y="309" width="1.9" height="15.0" fill="rgb(212,156,19)" rx="2" ry="2" />
<text  x="871.78" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::AST::CodeSegment, std::allocator&lt;WasmEdge::AST::CodeSegment&gt; &gt;::~vector (1 samples, 0.08%)</title><rect x="1183.4" y="277" width="1.0" height="15.0" fill="rgb(209,45,16)" rx="2" ry="2" />
<text  x="1186.44" y="287.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runShrOp&lt;unsigned int&gt; (3 samples, 0.24%)</title><rect x="916.5" y="405" width="2.8" height="15.0" fill="rgb(207,40,48)" rx="2" ry="2" />
<text  x="919.54" y="415.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (1 samples, 0.08%)</title><rect x="641.2" y="325" width="0.9" height="15.0" fill="rgb(212,15,48)" rx="2" ry="2" />
<text  x="644.21" y="335.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.08%)</title><rect x="1183.4" y="69" width="1.0" height="15.0" fill="rgb(247,130,17)" rx="2" ry="2" />
<text  x="1186.44" y="79.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (30 samples, 2.38%)</title><rect x="555.0" y="277" width="28.1" height="15.0" fill="rgb(254,191,37)" rx="2" ry="2" />
<text  x="558.05" y="287.5" >c..</text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (6 samples, 0.48%)</title><rect x="533.5" y="261" width="5.6" height="15.0" fill="rgb(219,209,17)" rx="2" ry="2" />
<text  x="536.51" y="271.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;float, double, unsigned __int128, __int128, unsigned long __vector (8 samples, 0.63%)</title><rect x="547.6" y="293" width="7.4" height="15.0" fill="rgb(227,131,9)" rx="2" ry="2" />
<text  x="550.56" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="11.9" y="661" width="0.9" height="15.0" fill="rgb(205,146,0)" rx="2" ry="2" />
<text  x="14.87" y="671.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runReturnOp (1 samples, 0.08%)</title><rect x="530.7" y="405" width="0.9" height="15.0" fill="rgb(208,86,0)" rx="2" ry="2" />
<text  x="533.70" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.08%)</title><rect x="10.0" y="709" width="0.9" height="15.0" fill="rgb(237,106,36)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runStoreOp&lt;unsigned int, 32u&gt; (11 samples, 0.87%)</title><rect x="531.6" y="373" width="10.3" height="15.0" fill="rgb(207,151,23)" rx="2" ry="2" />
<text  x="534.63" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (112 samples, 8.89%)</title><rect x="1068.3" y="373" width="104.8" height="15.0" fill="rgb(249,123,30)" rx="2" ry="2" />
<text  x="1071.25" y="383.5" >std::vector&lt;..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_M_reset_impl (2 samples, 0.16%)</title><rect x="1185.3" y="245" width="1.9" height="15.0" fill="rgb(247,212,37)" rx="2" ry="2" />
<text  x="1188.32" y="255.5" ></text>
</g>
<g >
<title>WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (28 samples, 2.22%)</title><rect x="593.4" y="389" width="26.3" height="15.0" fill="rgb(235,87,14)" rx="2" ry="2" />
<text  x="596.44" y="399.5" >W..</text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runGlobalGetOp (21 samples, 1.67%)</title><rect x="491.4" y="405" width="19.6" height="15.0" fill="rgb(246,142,52)" rx="2" ry="2" />
<text  x="494.37" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_M_reset (2 samples, 0.16%)</title><rect x="1185.3" y="373" width="1.9" height="15.0" fill="rgb(247,9,7)" rx="2" ry="2" />
<text  x="1188.32" y="383.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;false, true, std::__detail::__variant::_Variant_storage&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_M_reset_impl (2 samples, 0.16%)</title><rect x="1185.3" y="341" width="1.9" height="15.0" fill="rgb(212,64,31)" rx="2" ry="2" />
<text  x="1188.32" y="351.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;std::unique_ptr&lt;WasmEdge::AST::Module, std::default_delete&lt;WasmEdge::AST::Module&gt; &gt;, WasmEdge::ErrCode, false&gt;::~expected_copy_base (1 samples, 0.08%)</title><rect x="1183.4" y="437" width="1.0" height="15.0" fill="rgb(228,118,41)" rx="2" ry="2" />
<text  x="1186.44" y="447.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::getMemInstByIdx (27 samples, 2.14%)</title><rect x="245.1" y="405" width="25.2" height="15.0" fill="rgb(241,174,49)" rx="2" ry="2" />
<text  x="248.06" y="415.5" >W..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="1187.2" y="437" width="0.9" height="15.0" fill="rgb(220,41,9)" rx="2" ry="2" />
<text  x="1190.19" y="447.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadInstruction (3 samples, 0.24%)</title><rect x="18.4" y="325" width="2.8" height="15.0" fill="rgb(227,5,17)" rx="2" ry="2" />
<text  x="21.43" y="335.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="11.9" y="693" width="0.9" height="15.0" fill="rgb(208,57,37)" rx="2" ry="2" />
<text  x="14.87" y="703.5" ></text>
</g>
<g >
<title>WasmEdge::FileMgr::readS32 (4 samples, 0.32%)</title><rect x="14.7" y="309" width="3.7" height="15.0" fill="rgb(225,198,2)" rx="2" ry="2" />
<text  x="17.68" y="319.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (2 samples, 0.16%)</title><rect x="868.8" y="293" width="1.9" height="15.0" fill="rgb(231,33,30)" rx="2" ry="2" />
<text  x="871.78" y="303.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.08%)</title><rect x="1183.4" y="53" width="1.0" height="15.0" fill="rgb(224,186,41)" rx="2" ry="2" />
<text  x="1186.44" y="63.5" ></text>
</g>
<g >
<title>malloc_consolidate (2 samples, 0.16%)</title><rect x="1185.3" y="101" width="1.9" height="15.0" fill="rgb(207,191,29)" rx="2" ry="2" />
<text  x="1188.32" y="111.5" ></text>
</g>
<g >
<title>std::__atomic_futex_unsigned_base::_M_futex_wait_until (1 samples, 0.08%)</title><rect x="1184.4" y="581" width="0.9" height="15.0" fill="rgb(244,151,10)" rx="2" ry="2" />
<text  x="1187.38" y="591.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (2 samples, 0.16%)</title><rect x="868.8" y="357" width="1.9" height="15.0" fill="rgb(219,63,21)" rx="2" ry="2" />
<text  x="871.78" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::_M_deallocate (1 samples, 0.08%)</title><rect x="25.9" y="341" width="1.0" height="15.0" fill="rgb(211,200,22)" rx="2" ry="2" />
<text  x="28.92" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::AST::Module::~Module (1 samples, 0.08%)</title><rect x="1183.4" y="309" width="1.0" height="15.0" fill="rgb(237,150,13)" rx="2" ry="2" />
<text  x="1186.44" y="319.5" ></text>
</g>
<g >
<title>WasmEdge::Validator::Validator::validate (5 samples, 0.40%)</title><rect x="1178.8" y="469" width="4.6" height="15.0" fill="rgb(246,79,9)" rx="2" ry="2" />
<text  x="1181.76" y="479.5" ></text>
</g>
<g >
<title>WasmEdge::AST::Expression::~Expression (1 samples, 0.08%)</title><rect x="1183.4" y="165" width="1.0" height="15.0" fill="rgb(205,9,39)" rx="2" ry="2" />
<text  x="1186.44" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::deallocate (1 samples, 0.08%)</title><rect x="1183.4" y="101" width="1.0" height="15.0" fill="rgb(233,151,20)" rx="2" ry="2" />
<text  x="1186.44" y="111.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (30 samples, 2.38%)</title><rect x="555.0" y="293" width="28.1" height="15.0" fill="rgb(245,13,37)" rx="2" ry="2" />
<text  x="558.05" y="303.5" >c..</text>
</g>
<g >
<title>std::shared_mutex::lock_shared (7 samples, 0.56%)</title><rect x="484.8" y="357" width="6.6" height="15.0" fill="rgb(206,112,50)" rx="2" ry="2" />
<text  x="487.81" y="367.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.16%)</title><rect x="536.3" y="213" width="1.9" height="15.0" fill="rgb(248,83,47)" rx="2" ry="2" />
<text  x="539.32" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::MemoryInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::MemoryInstance&gt; &gt; &gt; (1 samples, 0.08%)</title><rect x="1187.2" y="549" width="0.9" height="15.0" fill="rgb(245,3,38)" rx="2" ry="2" />
<text  x="1190.19" y="559.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.08%)</title><rect x="1184.4" y="421" width="0.9" height="15.0" fill="rgb(253,213,44)" rx="2" ry="2" />
<text  x="1187.38" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;WasmEdge::AST::Instruction&gt;::deallocate (1 samples, 0.08%)</title><rect x="1183.4" y="85" width="1.0" height="15.0" fill="rgb(231,172,43)" rx="2" ry="2" />
<text  x="1186.44" y="95.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (9 samples, 0.71%)</title><rect x="583.1" y="357" width="8.5" height="15.0" fill="rgb(238,118,12)" rx="2" ry="2" />
<text  x="586.14" y="367.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.08%)</title><rect x="1188.1" y="565" width="1.0" height="15.0" fill="rgb(213,121,22)" rx="2" ry="2" />
<text  x="1191.13" y="575.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;std::unique_ptr&lt;WasmEdge::AST::Module, std::default_delete&lt;WasmEdge::AST::Module&gt; &gt;, WasmEdge::ErrCode&gt;::~expected_operations_base (1 samples, 0.08%)</title><rect x="1183.4" y="421" width="1.0" height="15.0" fill="rgb(239,175,10)" rx="2" ry="2" />
<text  x="1186.44" y="431.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (7 samples, 0.56%)</title><rect x="632.8" y="357" width="6.5" height="15.0" fill="rgb(214,145,33)" rx="2" ry="2" />
<text  x="635.78" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;WasmEdge::Runtime::Instance::ModuleInstance&gt;::operator (3 samples, 0.24%)</title><rect x="1185.3" y="661" width="2.8" height="15.0" fill="rgb(239,103,38)" rx="2" ry="2" />
<text  x="1188.32" y="671.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (9 samples, 0.71%)</title><rect x="583.1" y="341" width="8.5" height="15.0" fill="rgb(245,182,9)" rx="2" ry="2" />
<text  x="586.14" y="351.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (30 samples, 2.38%)</title><rect x="555.0" y="341" width="28.1" height="15.0" fill="rgb(254,203,14)" rx="2" ry="2" />
<text  x="558.05" y="351.5" >c..</text>
</g>
<g >
<title>WasmEdge::FileMgr::readU32 (3 samples, 0.24%)</title><rect x="18.4" y="309" width="2.8" height="15.0" fill="rgb(222,92,32)" rx="2" ry="2" />
<text  x="21.43" y="319.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runLtOp&lt;int&gt; (4 samples, 0.32%)</title><rect x="866.9" y="405" width="3.8" height="15.0" fill="rgb(239,82,47)" rx="2" ry="2" />
<text  x="869.90" y="415.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (30 samples, 2.38%)</title><rect x="555.0" y="373" width="28.1" height="15.0" fill="rgb(231,68,29)" rx="2" ry="2" />
<text  x="558.05" y="383.5" >c..</text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.08%)</title><rect x="510.1" y="373" width="0.9" height="15.0" fill="rgb(250,31,41)" rx="2" ry="2" />
<text  x="513.10" y="383.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (3 samples, 0.24%)</title><rect x="539.1" y="261" width="2.8" height="15.0" fill="rgb(217,12,0)" rx="2" ry="2" />
<text  x="542.13" y="271.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (36 samples, 2.86%)</title><rect x="874.4" y="357" width="33.7" height="15.0" fill="rgb(229,189,23)" rx="2" ry="2" />
<text  x="877.40" y="367.5" >cx..</text>
</g>
<g >
<title>exec_binprm (1 samples, 0.08%)</title><rect x="10.0" y="661" width="0.9" height="15.0" fill="rgb(237,141,32)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.08%)</title><rect x="25.9" y="293" width="1.0" height="15.0" fill="rgb(226,102,37)" rx="2" ry="2" />
<text  x="28.92" y="303.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (1 samples, 0.08%)</title><rect x="641.2" y="293" width="0.9" height="15.0" fill="rgb(220,79,41)" rx="2" ry="2" />
<text  x="644.21" y="303.5" ></text>
</g>
<g >
<title>WasmEdge::AST::CodeSegment::~CodeSegment (1 samples, 0.08%)</title><rect x="1183.4" y="197" width="1.0" height="15.0" fill="rgb(215,197,47)" rx="2" ry="2" />
<text  x="1186.44" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (1 samples, 0.08%)</title><rect x="25.9" y="277" width="1.0" height="15.0" fill="rgb(243,164,4)" rx="2" ry="2" />
<text  x="28.92" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3 samples, 0.24%)</title><rect x="544.7" y="405" width="2.9" height="15.0" fill="rgb(205,26,35)" rx="2" ry="2" />
<text  x="547.75" y="415.5" ></text>
</g>
<g >
<title>exc_page_fault (11 samples, 0.87%)</title><rect x="531.6" y="341" width="10.3" height="15.0" fill="rgb(231,169,30)" rx="2" ry="2" />
<text  x="534.63" y="351.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (1 samples, 0.08%)</title><rect x="924.0" y="293" width="1.0" height="15.0" fill="rgb(237,140,32)" rx="2" ry="2" />
<text  x="927.03" y="303.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (7 samples, 0.56%)</title><rect x="632.8" y="389" width="6.5" height="15.0" fill="rgb(246,39,41)" rx="2" ry="2" />
<text  x="635.78" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (139 samples, 11.03%)</title><rect x="700.2" y="373" width="130.2" height="15.0" fill="rgb(245,3,29)" rx="2" ry="2" />
<text  x="703.21" y="383.5" >std::vector&lt;Wasm..</text>
</g>
<g >
<title>[[stack]] (1 samples, 0.08%)</title><rect x="11.9" y="741" width="0.9" height="15.0" fill="rgb(238,224,46)" rx="2" ry="2" />
<text  x="14.87" y="751.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (13 samples, 1.03%)</title><rect x="619.7" y="341" width="12.1" height="15.0" fill="rgb(237,152,44)" rx="2" ry="2" />
<text  x="622.67" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (8 samples, 0.63%)</title><rect x="547.6" y="325" width="7.4" height="15.0" fill="rgb(224,211,32)" rx="2" ry="2" />
<text  x="550.56" y="335.5" ></text>
</g>
<g >
<title>std::shared_future&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.08%)</title><rect x="1184.4" y="677" width="0.9" height="15.0" fill="rgb(215,150,16)" rx="2" ry="2" />
<text  x="1187.38" y="687.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.08%)</title><rect x="25.9" y="149" width="1.0" height="15.0" fill="rgb(238,142,15)" rx="2" ry="2" />
<text  x="28.92" y="159.5" ></text>
</g>
<g >
<title>do_anonymous_page (10 samples, 0.79%)</title><rect x="532.6" y="277" width="9.3" height="15.0" fill="rgb(206,106,30)" rx="2" ry="2" />
<text  x="535.57" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::emplace_back&lt;WasmEdge::OpCode&amp;, unsigned long&amp;&gt; (3 samples, 0.24%)</title><rect x="22.2" y="341" width="2.8" height="15.0" fill="rgb(254,103,43)" rx="2" ry="2" />
<text  x="25.17" y="351.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.16%)</title><rect x="1185.3" y="117" width="1.9" height="15.0" fill="rgb(242,37,9)" rx="2" ry="2" />
<text  x="1188.32" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="1184.4" y="549" width="0.9" height="15.0" fill="rgb(240,66,15)" rx="2" ry="2" />
<text  x="1187.38" y="559.5" ></text>
</g>
<g >
<title>loadSectionContentVec&lt;WasmEdge::AST::ElementSection, WasmEdge::Loader::Loader::loadSection (1 samples, 0.08%)</title><rect x="25.9" y="421" width="1.0" height="15.0" fill="rgb(249,30,45)" rx="2" ry="2" />
<text  x="28.92" y="431.5" ></text>
</g>
<g >
<title>__alloc_pages (1 samples, 0.08%)</title><rect x="532.6" y="245" width="0.9" height="15.0" fill="rgb(211,84,22)" rx="2" ry="2" />
<text  x="535.57" y="255.5" ></text>
</g>
<g >
<title>exit_mmap (2 samples, 0.16%)</title><rect x="1188.1" y="645" width="1.9" height="15.0" fill="rgb(205,100,5)" rx="2" ry="2" />
<text  x="1191.13" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.08%)</title><rect x="866.0" y="357" width="0.9" height="15.0" fill="rgb(211,143,37)" rx="2" ry="2" />
<text  x="868.97" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::VM::VM::runWasmFile (1,250 samples, 99.21%)</title><rect x="13.7" y="533" width="1170.7" height="15.0" fill="rgb(220,8,2)" rx="2" ry="2" />
<text  x="16.75" y="543.5" >WasmEdge::VM::VM::runWasmFile</text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;std::unique_ptr&lt;WasmEdge::AST::Module, std::default_delete&lt;WasmEdge::AST::Module&gt; &gt;, WasmEdge::ErrCode, false&gt;::~expected_move_base (1 samples, 0.08%)</title><rect x="1183.4" y="453" width="1.0" height="15.0" fill="rgb(254,216,0)" rx="2" ry="2" />
<text  x="1186.44" y="463.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (9 samples, 0.71%)</title><rect x="908.1" y="389" width="8.4" height="15.0" fill="rgb(226,162,3)" rx="2" ry="2" />
<text  x="911.11" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::deallocate (2 samples, 0.16%)</title><rect x="1185.3" y="149" width="1.9" height="15.0" fill="rgb(239,155,16)" rx="2" ry="2" />
<text  x="1188.32" y="159.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (1 samples, 0.08%)</title><rect x="641.2" y="373" width="0.9" height="15.0" fill="rgb(236,65,41)" rx="2" ry="2" />
<text  x="644.21" y="383.5" ></text>
</g>
<g >
<title>main (4 samples, 0.32%)</title><rect x="1184.4" y="709" width="3.7" height="15.0" fill="rgb(235,132,30)" rx="2" ry="2" />
<text  x="1187.38" y="719.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::push&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.08%)</title><rect x="510.1" y="389" width="0.9" height="15.0" fill="rgb(216,147,8)" rx="2" ry="2" />
<text  x="513.10" y="399.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runSubOp&lt;unsigned int&gt; (5 samples, 0.40%)</title><rect x="919.3" y="405" width="4.7" height="15.0" fill="rgb(218,21,39)" rx="2" ry="2" />
<text  x="922.35" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;WasmEdge::AST::Module, std::default_delete&lt;WasmEdge::AST::Module&gt; &gt;::~unique_ptr (1 samples, 0.08%)</title><rect x="1183.4" y="357" width="1.0" height="15.0" fill="rgb(227,207,2)" rx="2" ry="2" />
<text  x="1186.44" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::_M_realloc_insert&lt;WasmEdge::AST::Instruction&gt; (1 samples, 0.08%)</title><rect x="25.9" y="357" width="1.0" height="15.0" fill="rgb(208,201,25)" rx="2" ry="2" />
<text  x="28.92" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::Allocator::release (1 samples, 0.08%)</title><rect x="1187.2" y="469" width="0.9" height="15.0" fill="rgb(254,42,41)" rx="2" ry="2" />
<text  x="1190.19" y="479.5" ></text>
</g>
<g >
<title>bprm_execve (1 samples, 0.08%)</title><rect x="10.0" y="677" width="0.9" height="15.0" fill="rgb(212,106,1)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (2 samples, 0.16%)</title><rect x="870.7" y="277" width="1.8" height="15.0" fill="rgb(222,180,14)" rx="2" ry="2" />
<text  x="873.65" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (10 samples, 0.79%)</title><rect x="532.6" y="293" width="9.3" height="15.0" fill="rgb(249,136,37)" rx="2" ry="2" />
<text  x="535.57" y="303.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.08%)</title><rect x="1187.2" y="373" width="0.9" height="15.0" fill="rgb(207,167,2)" rx="2" ry="2" />
<text  x="1190.19" y="383.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.08%)</title><rect x="1184.4" y="405" width="0.9" height="15.0" fill="rgb(206,223,39)" rx="2" ry="2" />
<text  x="1187.38" y="415.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.08%)</title><rect x="12.8" y="677" width="0.9" height="15.0" fill="rgb(212,70,31)" rx="2" ry="2" />
<text  x="15.81" y="687.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (1 samples, 0.08%)</title><rect x="873.5" y="309" width="0.9" height="15.0" fill="rgb(250,24,30)" rx="2" ry="2" />
<text  x="876.46" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.08%)</title><rect x="482.0" y="373" width="0.9" height="15.0" fill="rgb(219,74,1)" rx="2" ry="2" />
<text  x="485.00" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runBrIfOp (217 samples, 17.22%)</title><rect x="270.3" y="405" width="203.3" height="15.0" fill="rgb(245,181,32)" rx="2" ry="2" />
<text  x="273.35" y="415.5" >WasmEdge::Executor::Execut..</text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (5 samples, 0.40%)</title><rect x="1058.9" y="373" width="4.7" height="15.0" fill="rgb(212,181,14)" rx="2" ry="2" />
<text  x="1061.89" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::execute (1 samples, 0.08%)</title><rect x="10.9" y="725" width="1.0" height="15.0" fill="rgb(212,21,35)" rx="2" ry="2" />
<text  x="13.94" y="735.5" ></text>
</g>
<g >
<title>std::default_delete&lt;WasmEdge::Runtime::Instance::MemoryInstance&gt;::operator (1 samples, 0.08%)</title><rect x="1187.2" y="517" width="0.9" height="15.0" fill="rgb(229,133,45)" rx="2" ry="2" />
<text  x="1190.19" y="527.5" ></text>
</g>
<g >
<title>WasmEdge::Validator::FormChecker::popType (1 samples, 0.08%)</title><rect x="1181.6" y="373" width="0.9" height="15.0" fill="rgb(205,98,36)" rx="2" ry="2" />
<text  x="1184.57" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::VM::VM::unsafeRunWasmFile (1,250 samples, 99.21%)</title><rect x="13.7" y="517" width="1170.7" height="15.0" fill="rgb(221,175,20)" rx="2" ry="2" />
<text  x="16.75" y="527.5" >WasmEdge::VM::VM::unsafeRunWasmFile</text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (1 samples, 0.08%)</title><rect x="641.2" y="277" width="0.9" height="15.0" fill="rgb(232,190,54)" rx="2" ry="2" />
<text  x="644.21" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;WasmEdge::AST::Instruction&gt;::construct&lt;WasmEdge::AST::Instruction, WasmEdge::OpCode&amp;, unsigned long&amp;&gt; (2 samples, 0.16%)</title><rect x="22.2" y="309" width="1.8" height="15.0" fill="rgb(252,199,4)" rx="2" ry="2" />
<text  x="25.17" y="319.5" ></text>
</g>
<g >
<title>loadSectionContent&lt;WasmEdge::AST::CodeSection, WasmEdge::Loader::Loader::loadSection (13 samples, 1.03%)</title><rect x="13.7" y="453" width="12.2" height="15.0" fill="rgb(236,137,50)" rx="2" ry="2" />
<text  x="16.75" y="463.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1,250 samples, 99.21%)</title><rect x="13.7" y="677" width="1170.7" height="15.0" fill="rgb(237,84,2)" rx="2" ry="2" />
<text  x="16.75" y="687.5" >std::thread::_Invoker&lt;std::tuple&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double,..</text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (4 samples, 0.32%)</title><rect x="850.0" y="373" width="3.8" height="15.0" fill="rgb(225,177,16)" rx="2" ry="2" />
<text  x="853.05" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadInstrSeq (13 samples, 1.03%)</title><rect x="13.7" y="357" width="12.2" height="15.0" fill="rgb(245,133,4)" rx="2" ry="2" />
<text  x="16.75" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;WasmEdge::AST::Module&gt;::operator (1 samples, 0.08%)</title><rect x="1183.4" y="341" width="1.0" height="15.0" fill="rgb(236,55,19)" rx="2" ry="2" />
<text  x="1186.44" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::Allocator::release (1 samples, 0.08%)</title><rect x="1187.2" y="485" width="0.9" height="15.0" fill="rgb(217,113,25)" rx="2" ry="2" />
<text  x="1190.19" y="495.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runEqzOp&lt;unsigned int&gt; (8 samples, 0.63%)</title><rect x="631.8" y="405" width="7.5" height="15.0" fill="rgb(236,59,29)" rx="2" ry="2" />
<text  x="634.84" y="415.5" ></text>
</g>
<g >
<title>operator (674 samples, 53.49%)</title><rect x="547.6" y="421" width="631.2" height="15.0" fill="rgb(228,173,9)" rx="2" ry="2" />
<text  x="550.56" y="431.5" >operator</text>
</g>
<g >
<title>schedule (1 samples, 0.08%)</title><rect x="25.9" y="197" width="1.0" height="15.0" fill="rgb(220,110,8)" rx="2" ry="2" />
<text  x="28.92" y="207.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runEqOp&lt;unsigned int&gt; (43 samples, 3.41%)</title><rect x="591.6" y="405" width="40.2" height="15.0" fill="rgb(229,203,50)" rx="2" ry="2" />
<text  x="594.57" y="415.5" >Was..</text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (5 samples, 0.40%)</title><rect x="919.3" y="389" width="4.7" height="15.0" fill="rgb(222,182,18)" rx="2" ry="2" />
<text  x="922.35" y="399.5" ></text>
</g>
<g >
<title>vm_normal_page (1 samples, 0.08%)</title><rect x="1189.1" y="565" width="0.9" height="15.0" fill="rgb(216,112,24)" rx="2" ry="2" />
<text  x="1192.06" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (40 samples, 3.17%)</title><rect x="662.7" y="373" width="37.5" height="15.0" fill="rgb(251,121,3)" rx="2" ry="2" />
<text  x="665.75" y="383.5" >std..</text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runLocalGetOp (197 samples, 15.63%)</title><rect x="645.9" y="405" width="184.5" height="15.0" fill="rgb(207,179,29)" rx="2" ry="2" />
<text  x="648.89" y="415.5" >WasmEdge::Executor::Exec..</text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;std::unique_ptr&lt;WasmEdge::AST::Module, std::default_delete&lt;WasmEdge::AST::Module&gt; &gt;, WasmEdge::ErrCode, false, true&gt;::destruct_value (1 samples, 0.08%)</title><rect x="1183.4" y="373" width="1.0" height="15.0" fill="rgb(222,53,1)" rx="2" ry="2" />
<text  x="1186.44" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::~_Move_ctor_base (2 samples, 0.16%)</title><rect x="1185.3" y="421" width="1.9" height="15.0" fill="rgb(227,45,14)" rx="2" ry="2" />
<text  x="1188.32" y="431.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (1 samples, 0.08%)</title><rect x="873.5" y="341" width="0.9" height="15.0" fill="rgb(206,205,14)" rx="2" ry="2" />
<text  x="876.46" y="351.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (7 samples, 0.56%)</title><rect x="632.8" y="325" width="6.5" height="15.0" fill="rgb(228,41,27)" rx="2" ry="2" />
<text  x="635.78" y="335.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (5 samples, 0.40%)</title><rect x="919.3" y="277" width="4.7" height="15.0" fill="rgb(225,7,39)" rx="2" ry="2" />
<text  x="922.35" y="287.5" ></text>
</g>
<g >
<title>std::default_delete&lt;WasmEdge::AST::Module&gt;::operator (1 samples, 0.08%)</title><rect x="1183.4" y="325" width="1.0" height="15.0" fill="rgb(245,58,31)" rx="2" ry="2" />
<text  x="1186.44" y="335.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runGlobalSetOp (3 samples, 0.24%)</title><rect x="511.0" y="405" width="2.8" height="15.0" fill="rgb(218,100,2)" rx="2" ry="2" />
<text  x="514.03" y="415.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runOrOp&lt;unsigned int&gt; (1 samples, 0.08%)</title><rect x="873.5" y="405" width="0.9" height="15.0" fill="rgb(229,195,29)" rx="2" ry="2" />
<text  x="876.46" y="415.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.08%)</title><rect x="11.9" y="597" width="0.9" height="15.0" fill="rgb(235,177,39)" rx="2" ry="2" />
<text  x="14.87" y="607.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;std::unique_ptr&lt;WasmEdge::AST::Module, std::default_delete&lt;WasmEdge::AST::Module&gt; &gt;, WasmEdge::ErrCode, false&gt;::~expected_copy_assign_base (1 samples, 0.08%)</title><rect x="1183.4" y="469" width="1.0" height="15.0" fill="rgb(238,221,33)" rx="2" ry="2" />
<text  x="1186.44" y="479.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.08%)</title><rect x="10.0" y="645" width="0.9" height="15.0" fill="rgb(213,44,52)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadInstruction (8 samples, 0.63%)</title><rect x="14.7" y="341" width="7.5" height="15.0" fill="rgb(239,86,45)" rx="2" ry="2" />
<text  x="17.68" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="10.0" y="741" width="0.9" height="15.0" fill="rgb(228,46,17)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;WasmEdge::AST::Instruction*, WasmEdge::AST::Instruction&gt; (1 samples, 0.08%)</title><rect x="24.0" y="309" width="1.0" height="15.0" fill="rgb(226,222,6)" rx="2" ry="2" />
<text  x="27.05" y="319.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.08%)</title><rect x="10.0" y="757" width="0.9" height="15.0" fill="rgb(233,140,17)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (6 samples, 0.48%)</title><rect x="1173.1" y="373" width="5.7" height="15.0" fill="rgb(252,69,4)" rx="2" ry="2" />
<text  x="1176.14" y="383.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.08%)</title><rect x="1187.2" y="277" width="0.9" height="15.0" fill="rgb(211,154,41)" rx="2" ry="2" />
<text  x="1190.19" y="287.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (13 samples, 1.03%)</title><rect x="619.7" y="309" width="12.1" height="15.0" fill="rgb(221,120,47)" rx="2" ry="2" />
<text  x="622.67" y="319.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.08%)</title><rect x="1187.2" y="293" width="0.9" height="15.0" fill="rgb(240,21,9)" rx="2" ry="2" />
<text  x="1190.19" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.08%)</title><rect x="925.0" y="389" width="0.9" height="15.0" fill="rgb(230,49,54)" rx="2" ry="2" />
<text  x="927.97" y="399.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::ModuleInstance::~ModuleInstance (3 samples, 0.24%)</title><rect x="1185.3" y="645" width="2.8" height="15.0" fill="rgb(252,223,12)" rx="2" ry="2" />
<text  x="1188.32" y="655.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt;*&gt; (2 samples, 0.16%)</title><rect x="1185.3" y="565" width="1.9" height="15.0" fill="rgb(225,125,32)" rx="2" ry="2" />
<text  x="1188.32" y="575.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;std::unique_ptr&lt;WasmEdge::AST::Module, std::default_delete&lt;WasmEdge::AST::Module&gt; &gt;, WasmEdge::ErrCode&gt;::~expected (1 samples, 0.08%)</title><rect x="1183.4" y="501" width="1.0" height="15.0" fill="rgb(242,197,49)" rx="2" ry="2" />
<text  x="1186.44" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::MemoryInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::MemoryInstance&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::MemoryInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::MemoryInstance&gt; &gt; &gt; &gt;::~vector (1 samples, 0.08%)</title><rect x="1187.2" y="613" width="0.9" height="15.0" fill="rgb(230,20,48)" rx="2" ry="2" />
<text  x="1190.19" y="623.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.08%)</title><rect x="1188.1" y="485" width="1.0" height="15.0" fill="rgb(246,113,12)" rx="2" ry="2" />
<text  x="1191.13" y="495.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadSection (14 samples, 1.11%)</title><rect x="13.7" y="469" width="13.2" height="15.0" fill="rgb(214,95,36)" rx="2" ry="2" />
<text  x="16.75" y="479.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (3 samples, 0.24%)</title><rect x="916.5" y="341" width="2.8" height="15.0" fill="rgb(233,205,11)" rx="2" ry="2" />
<text  x="919.54" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1,250 samples, 99.21%)</title><rect x="13.7" y="549" width="1170.7" height="15.0" fill="rgb(234,6,23)" rx="2" ry="2" />
<text  x="16.75" y="559.5" >std::__invoke_impl&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsi..</text>
</g>
<g >
<title>std::_Destroy&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt; &gt; (2 samples, 0.16%)</title><rect x="1185.3" y="549" width="1.9" height="15.0" fill="rgb(223,190,15)" rx="2" ry="2" />
<text  x="1188.32" y="559.5" ></text>
</g>
<g >
<title>loadSectionContent&lt;WasmEdge::AST::ElementSection, WasmEdge::Loader::Loader::loadSection (1 samples, 0.08%)</title><rect x="25.9" y="453" width="1.0" height="15.0" fill="rgb(205,146,19)" rx="2" ry="2" />
<text  x="28.92" y="463.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (9 samples, 0.71%)</title><rect x="908.1" y="325" width="8.4" height="15.0" fill="rgb(249,48,31)" rx="2" ry="2" />
<text  x="911.11" y="335.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1,250 samples, 99.21%)</title><rect x="13.7" y="581" width="1170.7" height="15.0" fill="rgb(240,221,21)" rx="2" ry="2" />
<text  x="16.75" y="591.5" >std::__apply_impl&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsig..</text>
</g>
<g >
<title>operator (13 samples, 1.03%)</title><rect x="13.7" y="405" width="12.2" height="15.0" fill="rgb(206,101,28)" rx="2" ry="2" />
<text  x="16.75" y="415.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::getGlobInstByIdx (3 samples, 0.24%)</title><rect x="511.0" y="389" width="2.8" height="15.0" fill="rgb(231,125,43)" rx="2" ry="2" />
<text  x="514.03" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction&gt; (2 samples, 0.16%)</title><rect x="1185.3" y="229" width="1.9" height="15.0" fill="rgb(252,185,16)" rx="2" ry="2" />
<text  x="1188.32" y="239.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.08%)</title><rect x="1184.4" y="437" width="0.9" height="15.0" fill="rgb(216,14,42)" rx="2" ry="2" />
<text  x="1187.38" y="447.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;std::unique_ptr&lt;WasmEdge::AST::Module, std::default_delete&lt;WasmEdge::AST::Module&gt; &gt;, WasmEdge::ErrCode&gt;::~expected_view_base (1 samples, 0.08%)</title><rect x="1183.4" y="405" width="1.0" height="15.0" fill="rgb(246,165,42)" rx="2" ry="2" />
<text  x="1186.44" y="415.5" ></text>
</g>
<g >
<title>WasmEdge::Validator::FormChecker::popCtrl (1 samples, 0.08%)</title><rect x="1180.6" y="373" width="1.0" height="15.0" fill="rgb(250,122,9)" rx="2" ry="2" />
<text  x="1183.63" y="383.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (9 samples, 0.71%)</title><rect x="583.1" y="389" width="8.5" height="15.0" fill="rgb(235,39,5)" rx="2" ry="2" />
<text  x="586.14" y="399.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (2 samples, 0.16%)</title><rect x="870.7" y="389" width="1.8" height="15.0" fill="rgb(216,152,37)" rx="2" ry="2" />
<text  x="873.65" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (10 samples, 0.79%)</title><rect x="521.3" y="373" width="9.4" height="15.0" fill="rgb(229,49,13)" rx="2" ry="2" />
<text  x="524.33" y="383.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (2 samples, 0.16%)</title><rect x="1188.1" y="581" width="1.9" height="15.0" fill="rgb(245,180,32)" rx="2" ry="2" />
<text  x="1191.13" y="591.5" ></text>
</g>
<g >
<title>WasmEdge::Validator::FormChecker::checkInstrs (5 samples, 0.40%)</title><rect x="1178.8" y="405" width="4.6" height="15.0" fill="rgb(246,204,50)" rx="2" ry="2" />
<text  x="1181.76" y="415.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::parseModule (14 samples, 1.11%)</title><rect x="13.7" y="501" width="13.2" height="15.0" fill="rgb(207,145,6)" rx="2" ry="2" />
<text  x="16.75" y="511.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (6 samples, 0.48%)</title><rect x="1173.1" y="309" width="5.7" height="15.0" fill="rgb(251,22,37)" rx="2" ry="2" />
<text  x="1176.14" y="319.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runXorOp&lt;unsigned int&gt; (1 samples, 0.08%)</title><rect x="924.0" y="405" width="1.0" height="15.0" fill="rgb(206,182,20)" rx="2" ry="2" />
<text  x="927.03" y="415.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::FunctionInstance::~FunctionInstance (2 samples, 0.16%)</title><rect x="1185.3" y="501" width="1.9" height="15.0" fill="rgb(225,29,26)" rx="2" ry="2" />
<text  x="1188.32" y="511.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (9 samples, 0.71%)</title><rect x="908.1" y="277" width="8.4" height="15.0" fill="rgb(238,107,17)" rx="2" ry="2" />
<text  x="911.11" y="287.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (30 samples, 2.38%)</title><rect x="555.0" y="389" width="28.1" height="15.0" fill="rgb(232,50,8)" rx="2" ry="2" />
<text  x="558.05" y="399.5" >c..</text>
</g>
<g >
<title>WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (2 samples, 0.16%)</title><rect x="866.9" y="389" width="1.9" height="15.0" fill="rgb(233,95,27)" rx="2" ry="2" />
<text  x="869.90" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.08%)</title><rect x="1184.4" y="533" width="0.9" height="15.0" fill="rgb(237,209,25)" rx="2" ry="2" />
<text  x="1187.38" y="543.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.08%)</title><rect x="1184.4" y="661" width="0.9" height="15.0" fill="rgb(249,99,31)" rx="2" ry="2" />
<text  x="1187.38" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.16%)</title><rect x="1188.1" y="725" width="1.9" height="15.0" fill="rgb(241,160,50)" rx="2" ry="2" />
<text  x="1191.13" y="735.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runAndOp&lt;unsigned int&gt; (9 samples, 0.71%)</title><rect x="583.1" y="405" width="8.5" height="15.0" fill="rgb(210,124,46)" rx="2" ry="2" />
<text  x="586.14" y="415.5" ></text>
</g>
</g>
</svg>
