<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="790.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="773" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="773" > </text>
<g id="frames">
<g >
<title>futex_wait (1 samples, 0.12%)</title><rect x="1182.9" y="453" width="1.4" height="15.0" fill="rgb(222,210,14)" rx="2" ry="2" />
<text  x="1185.89" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt; &gt; (2 samples, 0.24%)</title><rect x="1184.3" y="517" width="2.9" height="15.0" fill="rgb(212,182,5)" rx="2" ry="2" />
<text  x="1187.31" y="527.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (11 samples, 1.33%)</title><rect x="968.2" y="341" width="15.7" height="15.0" fill="rgb(230,43,24)" rx="2" ry="2" />
<text  x="971.22" y="351.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (5 samples, 0.60%)</title><rect x="728.0" y="261" width="7.1" height="15.0" fill="rgb(208,124,10)" rx="2" ry="2" />
<text  x="730.95" y="271.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runAndOp&lt;unsigned int&gt; (5 samples, 0.60%)</title><rect x="709.5" y="373" width="7.1" height="15.0" fill="rgb(236,224,25)" rx="2" ry="2" />
<text  x="712.47" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runCallOp (6 samples, 0.72%)</title><rect x="509.0" y="373" width="8.5" height="15.0" fill="rgb(239,221,54)" rx="2" ry="2" />
<text  x="512.01" y="383.5" ></text>
</g>
<g >
<title>irqentry_exit (3 samples, 0.36%)</title><rect x="24.2" y="117" width="4.3" height="15.0" fill="rgb(210,154,21)" rx="2" ry="2" />
<text  x="27.22" y="127.5" ></text>
</g>
<g >
<title>std::shared_lock&lt;std::shared_mutex&gt;::shared_lock (2 samples, 0.24%)</title><rect x="514.7" y="341" width="2.8" height="15.0" fill="rgb(254,217,32)" rx="2" ry="2" />
<text  x="517.70" y="351.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (5 samples, 0.60%)</title><rect x="728.0" y="309" width="7.1" height="15.0" fill="rgb(216,141,32)" rx="2" ry="2" />
<text  x="730.95" y="319.5" ></text>
</g>
<g >
<title>_start (3 samples, 0.36%)</title><rect x="1182.9" y="709" width="4.3" height="15.0" fill="rgb(232,90,2)" rx="2" ry="2" />
<text  x="1185.89" y="719.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runBrOp (20 samples, 2.41%)</title><rect x="476.3" y="373" width="28.4" height="15.0" fill="rgb(210,95,31)" rx="2" ry="2" />
<text  x="479.31" y="383.5" >Wa..</text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (1 samples, 0.12%)</title><rect x="983.9" y="309" width="1.4" height="15.0" fill="rgb(229,2,13)" rx="2" ry="2" />
<text  x="986.86" y="319.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runReturnOp (2 samples, 0.24%)</title><rect x="651.2" y="373" width="2.8" height="15.0" fill="rgb(230,24,33)" rx="2" ry="2" />
<text  x="654.18" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (7 samples, 0.84%)</title><rect x="669.7" y="309" width="9.9" height="15.0" fill="rgb(229,121,21)" rx="2" ry="2" />
<text  x="672.66" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (77 samples, 9.28%)</title><rect x="772.0" y="341" width="109.5" height="15.0" fill="rgb(244,200,48)" rx="2" ry="2" />
<text  x="775.02" y="351.5" >std::vector&lt;W..</text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.24%)</title><rect x="1187.2" y="597" width="2.8" height="15.0" fill="rgb(249,71,42)" rx="2" ry="2" />
<text  x="1190.16" y="607.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runGtOp&lt;int&gt; (1 samples, 0.12%)</title><rect x="753.5" y="373" width="1.5" height="15.0" fill="rgb(207,23,52)" rx="2" ry="2" />
<text  x="756.54" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::FileMgr::readS32 (1 samples, 0.12%)</title><rect x="17.1" y="277" width="1.4" height="15.0" fill="rgb(235,146,49)" rx="2" ry="2" />
<text  x="20.11" y="287.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (2 samples, 0.24%)</title><rect x="1187.2" y="549" width="2.8" height="15.0" fill="rgb(213,198,45)" rx="2" ry="2" />
<text  x="1190.16" y="559.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.12%)</title><rect x="1182.9" y="629" width="1.4" height="15.0" fill="rgb(234,80,54)" rx="2" ry="2" />
<text  x="1185.89" y="639.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (21 samples, 2.53%)</title><rect x="679.6" y="245" width="29.9" height="15.0" fill="rgb(244,206,29)" rx="2" ry="2" />
<text  x="682.61" y="255.5" >cx..</text>
</g>
<g >
<title>WasmEdge::Executor::Executor::instantiate (1 samples, 0.12%)</title><rect x="38.4" y="421" width="1.5" height="15.0" fill="rgb(233,11,15)" rx="2" ry="2" />
<text  x="41.43" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::construct&lt;WasmEdge::AST::Instruction, WasmEdge::OpCode&amp;, unsigned long&amp;&gt; (2 samples, 0.24%)</title><rect x="32.7" y="293" width="2.9" height="15.0" fill="rgb(240,28,39)" rx="2" ry="2" />
<text  x="35.75" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_Variant_storage&lt;0ul, cxx20::span&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt; const, 18446744073709551615ul&gt;&amp;, cxx20::span&lt;WasmEdge::AST::Instruction const, 18446744073709551615ul&gt;&amp;&gt; (1 samples, 0.12%)</title><rect x="38.4" y="293" width="1.5" height="15.0" fill="rgb(242,155,6)" rx="2" ry="2" />
<text  x="41.43" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_M_reset_impl (2 samples, 0.24%)</title><rect x="1184.3" y="325" width="2.9" height="15.0" fill="rgb(239,20,45)" rx="2" ry="2" />
<text  x="1187.31" y="335.5" ></text>
</g>
<g >
<title>std::variant&lt;WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::~variant (2 samples, 0.24%)</title><rect x="1184.3" y="453" width="2.9" height="15.0" fill="rgb(253,225,19)" rx="2" ry="2" />
<text  x="1187.31" y="463.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::getTopN (12 samples, 1.45%)</title><rect x="755.0" y="357" width="17.0" height="15.0" fill="rgb(214,45,35)" rx="2" ry="2" />
<text  x="757.96" y="367.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.12%)</title><rect x="11.4" y="693" width="1.4" height="15.0" fill="rgb(216,27,12)" rx="2" ry="2" />
<text  x="14.42" y="703.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runGlobalGetOp (53 samples, 6.39%)</title><rect x="517.5" y="373" width="75.4" height="15.0" fill="rgb(245,163,35)" rx="2" ry="2" />
<text  x="520.54" y="383.5" >WasmEdge..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.12%)</title><rect x="668.2" y="325" width="1.5" height="15.0" fill="rgb(239,3,42)" rx="2" ry="2" />
<text  x="671.24" y="335.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (2 samples, 0.24%)</title><rect x="662.6" y="229" width="2.8" height="15.0" fill="rgb(213,160,13)" rx="2" ry="2" />
<text  x="665.55" y="239.5" ></text>
</g>
<g >
<title>alloc_pages (1 samples, 0.12%)</title><rect x="661.1" y="197" width="1.5" height="15.0" fill="rgb(217,134,7)" rx="2" ry="2" />
<text  x="664.13" y="207.5" ></text>
</g>
<g >
<title>loadSectionContent&lt;WasmEdge::AST::CodeSection, WasmEdge::Loader::Loader::loadSection (18 samples, 2.17%)</title><rect x="12.8" y="421" width="25.6" height="15.0" fill="rgb(230,28,40)" rx="2" ry="2" />
<text  x="15.84" y="431.5" >l..</text>
</g>
<g >
<title>WasmEdge::Validator::FormChecker::checkInstrs (1 samples, 0.12%)</title><rect x="1181.5" y="373" width="1.4" height="15.0" fill="rgb(217,122,27)" rx="2" ry="2" />
<text  x="1184.47" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::emplace_back&lt;WasmEdge::OpCode&amp;, unsigned long&amp;&gt; (3 samples, 0.36%)</title><rect x="32.7" y="309" width="4.3" height="15.0" fill="rgb(254,103,28)" rx="2" ry="2" />
<text  x="35.75" y="319.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (1 samples, 0.12%)</title><rect x="983.9" y="245" width="1.4" height="15.0" fill="rgb(220,223,16)" rx="2" ry="2" />
<text  x="986.86" y="255.5" ></text>
</g>
<g >
<title>__sched_text_start (3 samples, 0.36%)</title><rect x="24.2" y="53" width="4.3" height="15.0" fill="rgb(208,183,40)" rx="2" ry="2" />
<text  x="27.22" y="63.5" ></text>
</g>
<g >
<title>exc_page_fault (5 samples, 0.60%)</title><rect x="659.7" y="309" width="7.1" height="15.0" fill="rgb(218,84,5)" rx="2" ry="2" />
<text  x="662.71" y="319.5" ></text>
</g>
<g >
<title>WasmEdge::AST::Instruction::getNum (7 samples, 0.84%)</title><rect x="669.7" y="373" width="9.9" height="15.0" fill="rgb(249,87,36)" rx="2" ry="2" />
<text  x="672.66" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Validator::FormChecker::validate (1 samples, 0.12%)</title><rect x="1181.5" y="405" width="1.4" height="15.0" fill="rgb(238,12,51)" rx="2" ry="2" />
<text  x="1184.47" y="415.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.12%)</title><rect x="668.2" y="309" width="1.5" height="15.0" fill="rgb(216,217,41)" rx="2" ry="2" />
<text  x="671.24" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (11 samples, 1.33%)</title><rect x="1027.9" y="341" width="15.7" height="15.0" fill="rgb(221,46,17)" rx="2" ry="2" />
<text  x="1030.93" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.60%)</title><rect x="659.7" y="277" width="7.1" height="15.0" fill="rgb(209,203,49)" rx="2" ry="2" />
<text  x="662.71" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;WasmEdge::Runtime::Instance::ModuleInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::ModuleInstance&gt; &gt;::~unique_ptr (2 samples, 0.24%)</title><rect x="1184.3" y="645" width="2.9" height="15.0" fill="rgb(209,114,31)" rx="2" ry="2" />
<text  x="1187.31" y="655.5" ></text>
</g>
<g >
<title>WasmEdge::AST::Instruction::~Instruction (1 samples, 0.12%)</title><rect x="35.6" y="213" width="1.4" height="15.0" fill="rgb(249,181,50)" rx="2" ry="2" />
<text  x="38.59" y="223.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (1 samples, 0.12%)</title><rect x="966.8" y="261" width="1.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="969.80" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt;*, std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt; &gt; (2 samples, 0.24%)</title><rect x="1184.3" y="565" width="2.9" height="15.0" fill="rgb(206,120,1)" rx="2" ry="2" />
<text  x="1187.31" y="575.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (1 samples, 0.12%)</title><rect x="983.9" y="357" width="1.4" height="15.0" fill="rgb(224,182,54)" rx="2" ry="2" />
<text  x="986.86" y="367.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (1 samples, 0.12%)</title><rect x="1185.7" y="53" width="1.5" height="15.0" fill="rgb(212,132,30)" rx="2" ry="2" />
<text  x="1188.73" y="63.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;double, unsigned __int128, __int128, unsigned long __vector (7 samples, 0.84%)</title><rect x="669.7" y="245" width="9.9" height="15.0" fill="rgb(247,91,13)" rx="2" ry="2" />
<text  x="672.66" y="255.5" ></text>
</g>
<g >
<title>WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.12%)</title><rect x="752.1" y="357" width="1.4" height="15.0" fill="rgb(224,153,14)" rx="2" ry="2" />
<text  x="755.12" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (2 samples, 0.24%)</title><rect x="614.2" y="341" width="2.9" height="15.0" fill="rgb(211,38,12)" rx="2" ry="2" />
<text  x="617.22" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;WasmEdge::OpCode, unsigned int&gt;, std::allocator&lt;std::pair&lt;WasmEdge::OpCode, unsigned int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;WasmEdge::OpCode, unsigned int&gt; &gt; (1 samples, 0.12%)</title><rect x="37.0" y="277" width="1.4" height="15.0" fill="rgb(223,102,17)" rx="2" ry="2" />
<text  x="40.01" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;WasmEdge::OpCode, unsigned int&gt;, std::allocator&lt;std::pair&lt;WasmEdge::OpCode, unsigned int&gt; &gt; &gt;::push_back (1 samples, 0.12%)</title><rect x="37.0" y="309" width="1.4" height="15.0" fill="rgb(218,165,21)" rx="2" ry="2" />
<text  x="40.01" y="319.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadModule (18 samples, 2.17%)</title><rect x="12.8" y="453" width="25.6" height="15.0" fill="rgb(239,162,39)" rx="2" ry="2" />
<text  x="15.84" y="463.5" >W..</text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.12%)</title><rect x="11.4" y="661" width="1.4" height="15.0" fill="rgb(222,42,22)" rx="2" ry="2" />
<text  x="14.42" y="671.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (5 samples, 0.60%)</title><rect x="709.5" y="357" width="7.1" height="15.0" fill="rgb(232,156,22)" rx="2" ry="2" />
<text  x="712.47" y="367.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (1 samples, 0.12%)</title><rect x="983.9" y="277" width="1.4" height="15.0" fill="rgb(210,221,28)" rx="2" ry="2" />
<text  x="986.86" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::~_Move_ctor_base (2 samples, 0.24%)</title><rect x="1184.3" y="389" width="2.9" height="15.0" fill="rgb(238,111,32)" rx="2" ry="2" />
<text  x="1187.31" y="399.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runBrOp (11 samples, 1.33%)</title><rect x="436.5" y="341" width="15.6" height="15.0" fill="rgb(232,188,18)" rx="2" ry="2" />
<text  x="439.51" y="351.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (1 samples, 0.12%)</title><rect x="965.4" y="293" width="1.4" height="15.0" fill="rgb(245,61,10)" rx="2" ry="2" />
<text  x="968.37" y="303.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (1 samples, 0.12%)</title><rect x="966.8" y="341" width="1.4" height="15.0" fill="rgb(215,158,54)" rx="2" ry="2" />
<text  x="969.80" y="351.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (1 samples, 0.12%)</title><rect x="665.4" y="213" width="1.4" height="15.0" fill="rgb(207,169,38)" rx="2" ry="2" />
<text  x="668.40" y="223.5" ></text>
</g>
<g >
<title>perf-exec (1 samples, 0.12%)</title><rect x="10.0" y="725" width="1.4" height="15.0" fill="rgb(220,56,37)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (5 samples, 0.60%)</title><rect x="745.0" y="293" width="7.1" height="15.0" fill="rgb(249,162,49)" rx="2" ry="2" />
<text  x="748.01" y="303.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1 samples, 0.12%)</title><rect x="10.0" y="661" width="1.4" height="15.0" fill="rgb(244,43,18)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>finish_task_switch (3 samples, 0.36%)</title><rect x="24.2" y="37" width="4.3" height="15.0" fill="rgb(252,170,15)" rx="2" ry="2" />
<text  x="27.22" y="47.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::invoke (803 samples, 96.75%)</title><rect x="39.9" y="437" width="1141.6" height="15.0" fill="rgb(240,71,41)" rx="2" ry="2" />
<text  x="42.86" y="447.5" >WasmEdge::Executor::Executor::invoke</text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runShlOp&lt;unsigned int&gt; (1 samples, 0.12%)</title><rect x="966.8" y="373" width="1.4" height="15.0" fill="rgb(238,186,22)" rx="2" ry="2" />
<text  x="969.80" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_M_reset_impl (2 samples, 0.24%)</title><rect x="1184.3" y="213" width="2.9" height="15.0" fill="rgb(214,179,14)" rx="2" ry="2" />
<text  x="1187.31" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (6 samples, 0.72%)</title><rect x="901.4" y="341" width="8.5" height="15.0" fill="rgb(250,147,52)" rx="2" ry="2" />
<text  x="904.40" y="351.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (11 samples, 1.33%)</title><rect x="968.2" y="309" width="15.7" height="15.0" fill="rgb(232,197,54)" rx="2" ry="2" />
<text  x="971.22" y="319.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (21 samples, 2.53%)</title><rect x="679.6" y="357" width="29.9" height="15.0" fill="rgb(239,54,12)" rx="2" ry="2" />
<text  x="682.61" y="367.5" >cx..</text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runBrTableOp (1 samples, 0.12%)</title><rect x="504.7" y="373" width="1.5" height="15.0" fill="rgb(244,107,48)" rx="2" ry="2" />
<text  x="507.75" y="383.5" ></text>
</g>
<g >
<title>std::variant&lt;WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::variant&lt;WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, cxx20::span&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt; const, 18446744073709551615ul&gt;&amp;, cxx20::span&lt;WasmEdge::AST::Instruction const, 18446744073709551615ul&gt;&amp;, void&gt; (1 samples, 0.12%)</title><rect x="38.4" y="341" width="1.5" height="15.0" fill="rgb(211,197,12)" rx="2" ry="2" />
<text  x="41.43" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3 samples, 0.36%)</title><rect x="24.2" y="133" width="4.3" height="15.0" fill="rgb(246,2,23)" rx="2" ry="2" />
<text  x="27.22" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.12%)</title><rect x="958.3" y="309" width="1.4" height="15.0" fill="rgb(233,134,21)" rx="2" ry="2" />
<text  x="961.27" y="319.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (5 samples, 0.60%)</title><rect x="728.0" y="245" width="7.1" height="15.0" fill="rgb(210,26,5)" rx="2" ry="2" />
<text  x="730.95" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_Variant_storage&lt;0ul, cxx20::span&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt; const, 18446744073709551615ul&gt;&amp;, cxx20::span&lt;WasmEdge::AST::Instruction const, 18446744073709551615ul&gt;&amp;&gt; (1 samples, 0.12%)</title><rect x="38.4" y="229" width="1.5" height="15.0" fill="rgb(213,70,22)" rx="2" ry="2" />
<text  x="41.43" y="239.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runBrIfOp (11 samples, 1.33%)</title><rect x="436.5" y="357" width="15.6" height="15.0" fill="rgb(237,159,43)" rx="2" ry="2" />
<text  x="439.51" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.12%)</title><rect x="10.0" y="693" width="1.4" height="15.0" fill="rgb(248,53,17)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>std::shared_lock&lt;std::shared_mutex&gt;::~shared_lock (3 samples, 0.36%)</title><rect x="24.2" y="261" width="4.3" height="15.0" fill="rgb(224,88,54)" rx="2" ry="2" />
<text  x="27.22" y="271.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadInstruction (2 samples, 0.24%)</title><rect x="28.5" y="277" width="2.8" height="15.0" fill="rgb(205,95,53)" rx="2" ry="2" />
<text  x="31.48" y="287.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadInstruction (3 samples, 0.36%)</title><rect x="20.0" y="293" width="4.2" height="15.0" fill="rgb(247,157,17)" rx="2" ry="2" />
<text  x="22.95" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (2 samples, 0.24%)</title><rect x="1187.2" y="677" width="2.8" height="15.0" fill="rgb(211,22,52)" rx="2" ry="2" />
<text  x="1190.16" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.12%)</title><rect x="958.3" y="341" width="1.4" height="15.0" fill="rgb(224,170,47)" rx="2" ry="2" />
<text  x="961.27" y="351.5" ></text>
</g>
<g >
<title>std::shared_future&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.12%)</title><rect x="1182.9" y="645" width="1.4" height="15.0" fill="rgb(253,71,49)" rx="2" ry="2" />
<text  x="1185.89" y="655.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::MemoryInstance::checkAccessBound (1 samples, 0.12%)</title><rect x="644.1" y="341" width="1.4" height="15.0" fill="rgb(207,60,26)" rx="2" ry="2" />
<text  x="647.07" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;WasmEdge::Runtime::Instance::FunctionInstance, WasmEdge::Runtime::Instance::ModuleInstance*, WasmEdge::AST::FunctionType const&amp;, cxx20::span&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt; const, 18446744073709551615ul&gt;, cxx20::span&lt;WasmEdge::AST::Instruction const, 18446744073709551615ul&gt; &gt; (1 samples, 0.12%)</title><rect x="38.4" y="373" width="1.5" height="15.0" fill="rgb(214,90,38)" rx="2" ry="2" />
<text  x="41.43" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runLocalTeeOp (37 samples, 4.46%)</title><rect x="909.9" y="373" width="52.6" height="15.0" fill="rgb(244,2,52)" rx="2" ry="2" />
<text  x="912.93" y="383.5" >WasmE..</text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (7 samples, 0.84%)</title><rect x="669.7" y="293" width="9.9" height="15.0" fill="rgb(222,171,34)" rx="2" ry="2" />
<text  x="672.66" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (823 samples, 99.16%)</title><rect x="12.8" y="677" width="1170.1" height="15.0" fill="rgb(215,217,16)" rx="2" ry="2" />
<text  x="15.84" y="687.5" >[libstdc++.so.6.0.28]</text>
</g>
<g >
<title>__alloc_pages (1 samples, 0.12%)</title><rect x="661.1" y="181" width="1.5" height="15.0" fill="rgb(229,25,17)" rx="2" ry="2" />
<text  x="664.13" y="191.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (1 samples, 0.12%)</title><rect x="966.8" y="245" width="1.4" height="15.0" fill="rgb(239,120,47)" rx="2" ry="2" />
<text  x="969.80" y="255.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::FunctionInstance::FunctionInstance (1 samples, 0.12%)</title><rect x="38.4" y="357" width="1.5" height="15.0" fill="rgb(227,114,41)" rx="2" ry="2" />
<text  x="41.43" y="367.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (1 samples, 0.12%)</title><rect x="965.4" y="261" width="1.4" height="15.0" fill="rgb(252,0,39)" rx="2" ry="2" />
<text  x="968.37" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (1 samples, 0.12%)</title><rect x="668.2" y="389" width="1.5" height="15.0" fill="rgb(211,80,32)" rx="2" ry="2" />
<text  x="671.24" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.12%)</title><rect x="1182.9" y="485" width="1.4" height="15.0" fill="rgb(220,155,5)" rx="2" ry="2" />
<text  x="1185.89" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;WasmEdge::Runtime::Instance::ModuleInstance&gt;::operator (2 samples, 0.24%)</title><rect x="1184.3" y="629" width="2.9" height="15.0" fill="rgb(227,206,35)" rx="2" ry="2" />
<text  x="1187.31" y="639.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runCallIndirectOp (2 samples, 0.24%)</title><rect x="506.2" y="373" width="2.8" height="15.0" fill="rgb(229,19,17)" rx="2" ry="2" />
<text  x="509.17" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.12%)</title><rect x="958.3" y="325" width="1.4" height="15.0" fill="rgb(236,61,31)" rx="2" ry="2" />
<text  x="961.27" y="335.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runLoadOp&lt;unsigned int, 16u&gt; (4 samples, 0.48%)</title><rect x="617.1" y="373" width="5.6" height="15.0" fill="rgb(242,26,52)" rx="2" ry="2" />
<text  x="620.06" y="383.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.12%)</title><rect x="668.2" y="293" width="1.5" height="15.0" fill="rgb(218,126,8)" rx="2" ry="2" />
<text  x="671.24" y="303.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runGlobalSetOp (6 samples, 0.72%)</title><rect x="592.9" y="373" width="8.5" height="15.0" fill="rgb(242,57,43)" rx="2" ry="2" />
<text  x="595.89" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::deallocate (2 samples, 0.24%)</title><rect x="1184.3" y="117" width="2.9" height="15.0" fill="rgb(208,126,2)" rx="2" ry="2" />
<text  x="1187.31" y="127.5" ></text>
</g>
<g >
<title>std::apply&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (823 samples, 99.16%)</title><rect x="12.8" y="565" width="1170.1" height="15.0" fill="rgb(254,109,53)" rx="2" ry="2" />
<text  x="15.84" y="575.5" >std::apply&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned lon..</text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.48%)</title><rect x="661.1" y="261" width="5.7" height="15.0" fill="rgb(250,100,26)" rx="2" ry="2" />
<text  x="664.13" y="271.5" ></text>
</g>
<g >
<title>std::__shared_mutex_pthread::lock_shared (2 samples, 0.24%)</title><rect x="514.7" y="309" width="2.8" height="15.0" fill="rgb(205,102,32)" rx="2" ry="2" />
<text  x="517.70" y="319.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runOrOp&lt;unsigned int&gt; (1 samples, 0.12%)</title><rect x="965.4" y="373" width="1.4" height="15.0" fill="rgb(243,36,8)" rx="2" ry="2" />
<text  x="968.37" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (3 samples, 0.36%)</title><rect x="985.3" y="325" width="4.2" height="15.0" fill="rgb(226,191,43)" rx="2" ry="2" />
<text  x="988.28" y="335.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::MemoryInstance::checkAccessBound (2 samples, 0.24%)</title><rect x="648.3" y="341" width="2.9" height="15.0" fill="rgb(216,188,23)" rx="2" ry="2" />
<text  x="651.34" y="351.5" ></text>
</g>
<g >
<title>exit_mmap (2 samples, 0.24%)</title><rect x="1187.2" y="613" width="2.8" height="15.0" fill="rgb(252,21,19)" rx="2" ry="2" />
<text  x="1190.16" y="623.5" ></text>
</g>
<g >
<title>WasmEdge::FileMgr::readU32 (1 samples, 0.12%)</title><rect x="29.9" y="261" width="1.4" height="15.0" fill="rgb(227,134,35)" rx="2" ry="2" />
<text  x="32.90" y="271.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (5 samples, 0.60%)</title><rect x="728.0" y="357" width="7.1" height="15.0" fill="rgb(205,131,49)" rx="2" ry="2" />
<text  x="730.95" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (31 samples, 3.73%)</title><rect x="999.5" y="357" width="44.1" height="15.0" fill="rgb(208,228,44)" rx="2" ry="2" />
<text  x="1002.49" y="367.5" >std:..</text>
</g>
<g >
<title>operator (18 samples, 2.17%)</title><rect x="12.8" y="373" width="25.6" height="15.0" fill="rgb(211,160,49)" rx="2" ry="2" />
<text  x="15.84" y="383.5" >o..</text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadSegment (18 samples, 2.17%)</title><rect x="12.8" y="357" width="25.6" height="15.0" fill="rgb(206,122,42)" rx="2" ry="2" />
<text  x="15.84" y="367.5" >W..</text>
</g>
<g >
<title>WasmEdge::Validator::FormChecker::checkInstr (1 samples, 0.12%)</title><rect x="1181.5" y="357" width="1.4" height="15.0" fill="rgb(208,106,49)" rx="2" ry="2" />
<text  x="1184.47" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::ModuleInstance::unsafeGetGlobal (6 samples, 0.72%)</title><rect x="592.9" y="341" width="8.5" height="15.0" fill="rgb(205,92,25)" rx="2" ry="2" />
<text  x="595.89" y="351.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.12%)</title><rect x="666.8" y="325" width="1.4" height="15.0" fill="rgb(219,132,10)" rx="2" ry="2" />
<text  x="669.82" y="335.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (1 samples, 0.12%)</title><rect x="965.4" y="277" width="1.4" height="15.0" fill="rgb(229,36,49)" rx="2" ry="2" />
<text  x="968.37" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.12%)</title><rect x="10.0" y="709" width="1.4" height="15.0" fill="rgb(227,120,28)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.24%)</title><rect x="1187.2" y="565" width="2.8" height="15.0" fill="rgb(254,217,0)" rx="2" ry="2" />
<text  x="1190.16" y="575.5" ></text>
</g>
<g >
<title>std::shared_mutex::unlock_shared (3 samples, 0.36%)</title><rect x="24.2" y="245" width="4.3" height="15.0" fill="rgb(242,128,31)" rx="2" ry="2" />
<text  x="27.22" y="255.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.12%)</title><rect x="1188.6" y="485" width="1.4" height="15.0" fill="rgb(253,142,28)" rx="2" ry="2" />
<text  x="1191.58" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;true, std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.24%)</title><rect x="1184.3" y="261" width="2.9" height="15.0" fill="rgb(248,154,54)" rx="2" ry="2" />
<text  x="1187.31" y="271.5" ></text>
</g>
<g >
<title>std::__atomic_futex_unsigned&lt;2147483648u&gt;::_M_load_and_test_until (1 samples, 0.12%)</title><rect x="1182.9" y="565" width="1.4" height="15.0" fill="rgb(250,54,18)" rx="2" ry="2" />
<text  x="1185.89" y="575.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::getTop (3 samples, 0.36%)</title><rect x="985.3" y="373" width="4.2" height="15.0" fill="rgb(218,162,16)" rx="2" ry="2" />
<text  x="988.28" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.24%)</title><rect x="1187.2" y="709" width="2.8" height="15.0" fill="rgb(252,103,32)" rx="2" ry="2" />
<text  x="1190.16" y="719.5" ></text>
</g>
<g >
<title>std::shared_mutex::lock_shared (2 samples, 0.24%)</title><rect x="514.7" y="325" width="2.8" height="15.0" fill="rgb(253,198,21)" rx="2" ry="2" />
<text  x="517.70" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_Variant_base&lt;0ul, cxx20::span&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt; const, 18446744073709551615ul&gt;&amp;, cxx20::span&lt;WasmEdge::AST::Instruction const, 18446744073709551615ul&gt;&amp;&gt; (1 samples, 0.12%)</title><rect x="38.4" y="309" width="1.5" height="15.0" fill="rgb(220,191,34)" rx="2" ry="2" />
<text  x="41.43" y="319.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::push&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (5 samples, 0.60%)</title><rect x="585.8" y="357" width="7.1" height="15.0" fill="rgb(228,75,28)" rx="2" ry="2" />
<text  x="588.78" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::execute (343 samples, 41.33%)</title><rect x="179.2" y="389" width="487.6" height="15.0" fill="rgb(221,125,33)" rx="2" ry="2" />
<text  x="182.18" y="399.5" >WasmEdge::Executor::Executor::execute</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_Variant_storage&lt;0ul, cxx20::span&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt; const, 18446744073709551615ul&gt;&amp;, cxx20::span&lt;WasmEdge::AST::Instruction const, 18446744073709551615ul&gt;&amp;&gt; (1 samples, 0.12%)</title><rect x="38.4" y="245" width="1.5" height="15.0" fill="rgb(221,26,21)" rx="2" ry="2" />
<text  x="41.43" y="255.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (21 samples, 2.53%)</title><rect x="679.6" y="261" width="29.9" height="15.0" fill="rgb(230,167,40)" rx="2" ry="2" />
<text  x="682.61" y="271.5" >cx..</text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.12%)</title><rect x="666.8" y="357" width="1.4" height="15.0" fill="rgb(228,199,52)" rx="2" ry="2" />
<text  x="669.82" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::getGlobInstByIdx (6 samples, 0.72%)</title><rect x="592.9" y="357" width="8.5" height="15.0" fill="rgb(229,79,28)" rx="2" ry="2" />
<text  x="595.89" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::push&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (77 samples, 9.28%)</title><rect x="772.0" y="357" width="109.5" height="15.0" fill="rgb(242,101,44)" rx="2" ry="2" />
<text  x="775.02" y="367.5" >WasmEdge::Run..</text>
</g>
<g >
<title>irqentry_exit_to_user_mode (3 samples, 0.36%)</title><rect x="24.2" y="101" width="4.3" height="15.0" fill="rgb(236,175,23)" rx="2" ry="2" />
<text  x="27.22" y="111.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;true, std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.24%)</title><rect x="1184.3" y="293" width="2.9" height="15.0" fill="rgb(234,86,16)" rx="2" ry="2" />
<text  x="1187.31" y="303.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::pop (2 samples, 0.24%)</title><rect x="614.2" y="357" width="2.9" height="15.0" fill="rgb(221,163,9)" rx="2" ry="2" />
<text  x="617.22" y="367.5" ></text>
</g>
<g >
<title>__pthread_rwlock_rdunlock (3 samples, 0.36%)</title><rect x="24.2" y="165" width="4.3" height="15.0" fill="rgb(229,214,39)" rx="2" ry="2" />
<text  x="27.22" y="175.5" ></text>
</g>
<g >
<title>std::__invoke&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (823 samples, 99.16%)</title><rect x="12.8" y="613" width="1170.1" height="15.0" fill="rgb(250,44,43)" rx="2" ry="2" />
<text  x="15.84" y="623.5" >std::__invoke&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128,..</text>
</g>
<g >
<title>WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.12%)</title><rect x="645.5" y="357" width="1.4" height="15.0" fill="rgb(211,182,30)" rx="2" ry="2" />
<text  x="648.49" y="367.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (5 samples, 0.60%)</title><rect x="745.0" y="309" width="7.1" height="15.0" fill="rgb(206,6,14)" rx="2" ry="2" />
<text  x="748.01" y="319.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (11 samples, 1.33%)</title><rect x="968.2" y="245" width="15.7" height="15.0" fill="rgb(211,60,2)" rx="2" ry="2" />
<text  x="971.22" y="255.5" ></text>
</g>
<g >
<title>mmput (2 samples, 0.24%)</title><rect x="1187.2" y="629" width="2.8" height="15.0" fill="rgb(240,224,19)" rx="2" ry="2" />
<text  x="1190.16" y="639.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (5 samples, 0.60%)</title><rect x="709.5" y="309" width="7.1" height="15.0" fill="rgb(209,99,24)" rx="2" ry="2" />
<text  x="712.47" y="319.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (11 samples, 1.33%)</title><rect x="968.2" y="325" width="15.7" height="15.0" fill="rgb(225,69,18)" rx="2" ry="2" />
<text  x="971.22" y="335.5" ></text>
</g>
<g >
<title>std::accumulate&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt; const*, std::vector&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt;, std::allocator&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt; &gt; &gt; &gt;, unsigned int, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction::WasmFunction (1 samples, 0.12%)</title><rect x="38.4" y="165" width="1.5" height="15.0" fill="rgb(208,48,13)" rx="2" ry="2" />
<text  x="41.43" y="175.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::_Variant_storage&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_M_reset_impl (2 samples, 0.24%)</title><rect x="1184.3" y="229" width="2.9" height="15.0" fill="rgb(247,226,8)" rx="2" ry="2" />
<text  x="1187.31" y="239.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.12%)</title><rect x="645.5" y="341" width="1.4" height="15.0" fill="rgb(216,53,19)" rx="2" ry="2" />
<text  x="648.49" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::Configure::hasProposal (3 samples, 0.36%)</title><rect x="24.2" y="277" width="4.3" height="15.0" fill="rgb(207,141,15)" rx="2" ry="2" />
<text  x="27.22" y="287.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::execute (803 samples, 96.75%)</title><rect x="39.9" y="405" width="1141.6" height="15.0" fill="rgb(206,28,29)" rx="2" ry="2" />
<text  x="42.86" y="415.5" >WasmEdge::Executor::Executor::execute</text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (5 samples, 0.60%)</title><rect x="745.0" y="357" width="7.1" height="15.0" fill="rgb(252,121,12)" rx="2" ry="2" />
<text  x="748.01" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::ModuleInstance::~ModuleInstance (2 samples, 0.24%)</title><rect x="1184.3" y="613" width="2.9" height="15.0" fill="rgb(209,198,2)" rx="2" ry="2" />
<text  x="1187.31" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.12%)</title><rect x="10.0" y="677" width="1.4" height="15.0" fill="rgb(210,88,13)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (7 samples, 0.84%)</title><rect x="669.7" y="325" width="9.9" height="15.0" fill="rgb(241,142,46)" rx="2" ry="2" />
<text  x="672.66" y="335.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.12%)</title><rect x="1188.6" y="469" width="1.4" height="15.0" fill="rgb(217,222,16)" rx="2" ry="2" />
<text  x="1191.58" y="479.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (5 samples, 0.60%)</title><rect x="1174.4" y="341" width="7.1" height="15.0" fill="rgb(233,143,43)" rx="2" ry="2" />
<text  x="1177.36" y="351.5" ></text>
</g>
<g >
<title>pte_alloc_one (1 samples, 0.12%)</title><rect x="661.1" y="213" width="1.5" height="15.0" fill="rgb(210,228,54)" rx="2" ry="2" />
<text  x="664.13" y="223.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::pop (17 samples, 2.05%)</title><rect x="452.1" y="357" width="24.2" height="15.0" fill="rgb(240,135,34)" rx="2" ry="2" />
<text  x="455.14" y="367.5" >W..</text>
</g>
<g >
<title>WasmEdge::Executor::Executor::instantiateModule (1 samples, 0.12%)</title><rect x="38.4" y="453" width="1.5" height="15.0" fill="rgb(251,183,8)" rx="2" ry="2" />
<text  x="41.43" y="463.5" ></text>
</g>
<g >
<title>WasmEdge::VM::VM::~VM (2 samples, 0.24%)</title><rect x="1184.3" y="661" width="2.9" height="15.0" fill="rgb(220,111,50)" rx="2" ry="2" />
<text  x="1187.31" y="671.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (1 samples, 0.12%)</title><rect x="668.2" y="373" width="1.5" height="15.0" fill="rgb(215,3,8)" rx="2" ry="2" />
<text  x="671.24" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadInstruction (12 samples, 1.45%)</title><rect x="14.3" y="309" width="17.0" height="15.0" fill="rgb(210,117,7)" rx="2" ry="2" />
<text  x="17.27" y="319.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;float, double, unsigned __int128, __int128, unsigned long __vector (7 samples, 0.84%)</title><rect x="669.7" y="261" width="9.9" height="15.0" fill="rgb(235,98,28)" rx="2" ry="2" />
<text  x="672.66" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::~_Variant_base (2 samples, 0.24%)</title><rect x="1184.3" y="437" width="2.9" height="15.0" fill="rgb(214,160,12)" rx="2" ry="2" />
<text  x="1187.31" y="447.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.12%)</title><rect x="1185.7" y="85" width="1.5" height="15.0" fill="rgb(205,136,0)" rx="2" ry="2" />
<text  x="1188.73" y="95.5" ></text>
</g>
<g >
<title>WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (6 samples, 0.72%)</title><rect x="719.4" y="357" width="8.6" height="15.0" fill="rgb(228,164,14)" rx="2" ry="2" />
<text  x="722.42" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (82 samples, 9.88%)</title><rect x="1057.8" y="341" width="116.6" height="15.0" fill="rgb(221,50,38)" rx="2" ry="2" />
<text  x="1060.78" y="351.5" >std::vector&lt;Wa..</text>
</g>
<g >
<title>perf_event_exec (1 samples, 0.12%)</title><rect x="10.0" y="581" width="1.4" height="15.0" fill="rgb(208,129,8)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;WasmEdge::AST::Instruction&gt;::deallocate (2 samples, 0.24%)</title><rect x="1184.3" y="101" width="2.9" height="15.0" fill="rgb(233,56,43)" rx="2" ry="2" />
<text  x="1187.31" y="111.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runFunction (803 samples, 96.75%)</title><rect x="39.9" y="421" width="1141.6" height="15.0" fill="rgb(229,144,37)" rx="2" ry="2" />
<text  x="42.86" y="431.5" >WasmEdge::Executor::Executor::runFunction</text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (1 samples, 0.12%)</title><rect x="965.4" y="341" width="1.4" height="15.0" fill="rgb(237,79,50)" rx="2" ry="2" />
<text  x="968.37" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt; &gt; &gt;::~vector (2 samples, 0.24%)</title><rect x="1184.3" y="581" width="2.9" height="15.0" fill="rgb(240,216,19)" rx="2" ry="2" />
<text  x="1187.31" y="591.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.12%)</title><rect x="668.2" y="261" width="1.5" height="15.0" fill="rgb(238,166,47)" rx="2" ry="2" />
<text  x="671.24" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (92 samples, 11.08%)</title><rect x="1043.6" y="357" width="130.8" height="15.0" fill="rgb(223,78,9)" rx="2" ry="2" />
<text  x="1046.57" y="367.5" >std::vector&lt;Wasm..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_Variant_storage&lt;0ul, cxx20::span&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt; const, 18446744073709551615ul&gt;&amp;, cxx20::span&lt;WasmEdge::AST::Instruction const, 18446744073709551615ul&gt;&amp;&gt; (1 samples, 0.12%)</title><rect x="38.4" y="277" width="1.5" height="15.0" fill="rgb(223,101,23)" rx="2" ry="2" />
<text  x="41.43" y="287.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (1 samples, 0.12%)</title><rect x="966.8" y="293" width="1.4" height="15.0" fill="rgb(235,160,12)" rx="2" ry="2" />
<text  x="969.80" y="303.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.24%)</title><rect x="1187.2" y="581" width="2.8" height="15.0" fill="rgb(222,99,44)" rx="2" ry="2" />
<text  x="1190.16" y="591.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (5 samples, 0.60%)</title><rect x="728.0" y="341" width="7.1" height="15.0" fill="rgb(248,195,38)" rx="2" ry="2" />
<text  x="730.95" y="351.5" ></text>
</g>
<g >
<title>do_exit (2 samples, 0.24%)</title><rect x="1187.2" y="645" width="2.8" height="15.0" fill="rgb(229,62,19)" rx="2" ry="2" />
<text  x="1190.16" y="655.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;false, true, std::__detail::__variant::_Variant_storage&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_M_reset_impl (2 samples, 0.24%)</title><rect x="1184.3" y="309" width="2.9" height="15.0" fill="rgb(242,224,25)" rx="2" ry="2" />
<text  x="1187.31" y="319.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::branchToLabel (9 samples, 1.08%)</title><rect x="439.3" y="325" width="12.8" height="15.0" fill="rgb(209,49,32)" rx="2" ry="2" />
<text  x="442.35" y="335.5" ></text>
</g>
<g >
<title>operator (18 samples, 2.17%)</title><rect x="12.8" y="405" width="25.6" height="15.0" fill="rgb(244,185,38)" rx="2" ry="2" />
<text  x="15.84" y="415.5" >o..</text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.12%)</title><rect x="668.2" y="277" width="1.5" height="15.0" fill="rgb(244,156,12)" rx="2" ry="2" />
<text  x="671.24" y="287.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::popFrame (1 samples, 0.12%)</title><rect x="652.6" y="357" width="1.4" height="15.0" fill="rgb(248,14,21)" rx="2" ry="2" />
<text  x="655.60" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (3 samples, 0.36%)</title><rect x="985.3" y="357" width="4.2" height="15.0" fill="rgb(209,48,3)" rx="2" ry="2" />
<text  x="988.28" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.12%)</title><rect x="908.5" y="325" width="1.4" height="15.0" fill="rgb(223,88,41)" rx="2" ry="2" />
<text  x="911.51" y="335.5" ></text>
</g>
<g >
<title>WasmEdge::Validator::Validator::validate (1 samples, 0.12%)</title><rect x="1181.5" y="421" width="1.4" height="15.0" fill="rgb(239,170,53)" rx="2" ry="2" />
<text  x="1184.47" y="431.5" ></text>
</g>
<g >
<title>__libc_start_main (3 samples, 0.36%)</title><rect x="1182.9" y="693" width="4.3" height="15.0" fill="rgb(248,172,48)" rx="2" ry="2" />
<text  x="1185.89" y="703.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (823 samples, 99.16%)</title><rect x="12.8" y="629" width="1170.1" height="15.0" fill="rgb(215,87,18)" rx="2" ry="2" />
<text  x="15.84" y="639.5" >std::thread::_Invoker&lt;std::tuple&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double,..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (3 samples, 0.36%)</title><rect x="24.2" y="85" width="4.3" height="15.0" fill="rgb(234,125,44)" rx="2" ry="2" />
<text  x="27.22" y="95.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::getModule (1 samples, 0.12%)</title><rect x="408.1" y="357" width="1.4" height="15.0" fill="rgb(246,164,35)" rx="2" ry="2" />
<text  x="411.07" y="367.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.12%)</title><rect x="666.8" y="341" width="1.4" height="15.0" fill="rgb(250,29,46)" rx="2" ry="2" />
<text  x="669.82" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::parseModule (18 samples, 2.17%)</title><rect x="12.8" y="469" width="25.6" height="15.0" fill="rgb(232,78,27)" rx="2" ry="2" />
<text  x="15.84" y="479.5" >W..</text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (1 samples, 0.12%)</title><rect x="983.9" y="293" width="1.4" height="15.0" fill="rgb(243,65,4)" rx="2" ry="2" />
<text  x="986.86" y="303.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction::~WasmFunction (2 samples, 0.24%)</title><rect x="1184.3" y="181" width="2.9" height="15.0" fill="rgb(215,140,25)" rx="2" ry="2" />
<text  x="1187.31" y="191.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runLocalGetOp (89 samples, 10.72%)</title><rect x="755.0" y="373" width="126.5" height="15.0" fill="rgb(216,47,22)" rx="2" ry="2" />
<text  x="757.96" y="383.5" >WasmEdge::Execu..</text>
</g>
<g >
<title>all (830 samples, 100%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(237,185,4)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.12%)</title><rect x="1182.9" y="421" width="1.4" height="15.0" fill="rgb(211,60,1)" rx="2" ry="2" />
<text  x="1185.89" y="431.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (5 samples, 0.60%)</title><rect x="1174.4" y="261" width="7.1" height="15.0" fill="rgb(243,138,52)" rx="2" ry="2" />
<text  x="1177.36" y="271.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runIfElseOp (11 samples, 1.33%)</title><rect x="601.4" y="373" width="15.7" height="15.0" fill="rgb(233,138,33)" rx="2" ry="2" />
<text  x="604.42" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::getGlobInstByIdx (48 samples, 5.78%)</title><rect x="517.5" y="357" width="68.3" height="15.0" fill="rgb(234,30,45)" rx="2" ry="2" />
<text  x="520.54" y="367.5" >WasmEdg..</text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (6 samples, 0.72%)</title><rect x="719.4" y="341" width="8.6" height="15.0" fill="rgb(222,117,18)" rx="2" ry="2" />
<text  x="722.42" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.12%)</title><rect x="1182.9" y="661" width="1.4" height="15.0" fill="rgb(249,31,1)" rx="2" ry="2" />
<text  x="1185.89" y="671.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction::WasmFunction (1 samples, 0.12%)</title><rect x="38.4" y="181" width="1.5" height="15.0" fill="rgb(226,118,10)" rx="2" ry="2" />
<text  x="41.43" y="191.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.12%)</title><rect x="1182.9" y="437" width="1.4" height="15.0" fill="rgb(240,61,7)" rx="2" ry="2" />
<text  x="1185.89" y="447.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (11 samples, 1.33%)</title><rect x="968.2" y="277" width="15.7" height="15.0" fill="rgb(217,37,29)" rx="2" ry="2" />
<text  x="971.22" y="287.5" ></text>
</g>
<g >
<title>exec_binprm (1 samples, 0.12%)</title><rect x="10.0" y="629" width="1.4" height="15.0" fill="rgb(228,163,13)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::getTopN (1 samples, 0.12%)</title><rect x="900.0" y="357" width="1.4" height="15.0" fill="rgb(220,137,37)" rx="2" ry="2" />
<text  x="902.98" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::~_Move_assign_base (2 samples, 0.24%)</title><rect x="1184.3" y="421" width="2.9" height="15.0" fill="rgb(231,66,39)" rx="2" ry="2" />
<text  x="1187.31" y="431.5" ></text>
</g>
<g >
<title>WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (2 samples, 0.24%)</title><rect x="742.2" y="357" width="2.8" height="15.0" fill="rgb(227,28,16)" rx="2" ry="2" />
<text  x="745.17" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;long, float, double, unsigned __int128, __int128, unsigned long __vector (7 samples, 0.84%)</title><rect x="669.7" y="277" width="9.9" height="15.0" fill="rgb(239,19,54)" rx="2" ry="2" />
<text  x="672.66" y="287.5" ></text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.12%)</title><rect x="665.4" y="197" width="1.4" height="15.0" fill="rgb(241,147,36)" rx="2" ry="2" />
<text  x="668.40" y="207.5" ></text>
</g>
<g >
<title>WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (823 samples, 99.16%)</title><rect x="12.8" y="581" width="1170.1" height="15.0" fill="rgb(222,228,4)" rx="2" ry="2" />
<text  x="15.84" y="591.5" >WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, uns..</text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runEqOp&lt;unsigned int&gt; (12 samples, 1.45%)</title><rect x="718.0" y="373" width="17.1" height="15.0" fill="rgb(225,20,31)" rx="2" ry="2" />
<text  x="721.00" y="383.5" ></text>
</g>
<g >
<title>std::__shared_mutex_pthread::unlock_shared (3 samples, 0.36%)</title><rect x="24.2" y="229" width="4.3" height="15.0" fill="rgb(218,62,3)" rx="2" ry="2" />
<text  x="27.22" y="239.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (5 samples, 0.60%)</title><rect x="1174.4" y="357" width="7.1" height="15.0" fill="rgb(244,54,14)" rx="2" ry="2" />
<text  x="1177.36" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::ModuleInstance::unsafeGetMemory (84 samples, 10.12%)</title><rect x="288.7" y="357" width="119.4" height="15.0" fill="rgb(223,33,17)" rx="2" ry="2" />
<text  x="291.65" y="367.5" >WasmEdge::Runt..</text>
</g>
<g >
<title>std::_Destroy&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt;*&gt; (2 samples, 0.24%)</title><rect x="1184.3" y="549" width="2.9" height="15.0" fill="rgb(246,216,35)" rx="2" ry="2" />
<text  x="1187.31" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (17 samples, 2.05%)</title><rect x="452.1" y="341" width="24.2" height="15.0" fill="rgb(240,127,54)" rx="2" ry="2" />
<text  x="455.14" y="351.5" >s..</text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (3 samples, 0.36%)</title><rect x="985.3" y="341" width="4.2" height="15.0" fill="rgb(252,202,26)" rx="2" ry="2" />
<text  x="988.28" y="351.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (1 samples, 0.12%)</title><rect x="983.9" y="341" width="1.4" height="15.0" fill="rgb(238,171,48)" rx="2" ry="2" />
<text  x="986.86" y="351.5" ></text>
</g>
<g >
<title>__pte_alloc (1 samples, 0.12%)</title><rect x="661.1" y="229" width="1.5" height="15.0" fill="rgb(214,122,22)" rx="2" ry="2" />
<text  x="664.13" y="239.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (11 samples, 1.33%)</title><rect x="968.2" y="261" width="15.7" height="15.0" fill="rgb(219,25,6)" rx="2" ry="2" />
<text  x="971.22" y="271.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (5 samples, 0.60%)</title><rect x="1174.4" y="277" width="7.1" height="15.0" fill="rgb(213,15,51)" rx="2" ry="2" />
<text  x="1177.36" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (823 samples, 99.16%)</title><rect x="12.8" y="597" width="1170.1" height="15.0" fill="rgb(212,164,43)" rx="2" ry="2" />
<text  x="15.84" y="607.5" >std::__invoke_impl&lt;void, WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigne..</text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (1 samples, 0.12%)</title><rect x="983.9" y="261" width="1.4" height="15.0" fill="rgb(243,119,3)" rx="2" ry="2" />
<text  x="986.86" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;WasmEdge::AST::Instruction&gt; (1 samples, 0.12%)</title><rect x="35.6" y="229" width="1.4" height="15.0" fill="rgb(223,134,7)" rx="2" ry="2" />
<text  x="38.59" y="239.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (5 samples, 0.60%)</title><rect x="745.0" y="277" width="7.1" height="15.0" fill="rgb(242,116,6)" rx="2" ry="2" />
<text  x="748.01" y="287.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (5 samples, 0.60%)</title><rect x="709.5" y="261" width="7.1" height="15.0" fill="rgb(225,89,3)" rx="2" ry="2" />
<text  x="712.47" y="271.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.12%)</title><rect x="1188.6" y="517" width="1.4" height="15.0" fill="rgb(254,199,6)" rx="2" ry="2" />
<text  x="1191.58" y="527.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runXorOp&lt;unsigned int&gt; (1 samples, 0.12%)</title><rect x="983.9" y="373" width="1.4" height="15.0" fill="rgb(212,164,53)" rx="2" ry="2" />
<text  x="986.86" y="383.5" ></text>
</g>
<g >
<title>do_group_exit (2 samples, 0.24%)</title><rect x="1187.2" y="661" width="2.8" height="15.0" fill="rgb(206,85,52)" rx="2" ry="2" />
<text  x="1190.16" y="671.5" ></text>
</g>
<g >
<title>operator (5 samples, 0.60%)</title><rect x="24.2" y="293" width="7.1" height="15.0" fill="rgb(243,114,7)" rx="2" ry="2" />
<text  x="27.22" y="303.5" ></text>
</g>
<g >
<title>std::__atomic_futex_unsigned&lt;2147483648u&gt;::_M_load_and_test (1 samples, 0.12%)</title><rect x="1182.9" y="581" width="1.4" height="15.0" fill="rgb(212,31,13)" rx="2" ry="2" />
<text  x="1185.89" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (11 samples, 1.33%)</title><rect x="1027.9" y="325" width="15.7" height="15.0" fill="rgb(229,207,3)" rx="2" ry="2" />
<text  x="1030.93" y="335.5" ></text>
</g>
<g >
<title>begin_new_exec (1 samples, 0.12%)</title><rect x="10.0" y="597" width="1.4" height="15.0" fill="rgb(252,57,21)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (1 samples, 0.12%)</title><rect x="965.4" y="309" width="1.4" height="15.0" fill="rgb(217,124,39)" rx="2" ry="2" />
<text  x="968.37" y="319.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.12%)</title><rect x="1188.6" y="501" width="1.4" height="15.0" fill="rgb(219,127,42)" rx="2" ry="2" />
<text  x="1191.58" y="511.5" ></text>
</g>
<g >
<title>WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.12%)</title><rect x="962.5" y="357" width="1.5" height="15.0" fill="rgb(245,78,43)" rx="2" ry="2" />
<text  x="965.53" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;WasmEdge::OpCode, unsigned int&gt;, std::allocator&lt;std::pair&lt;WasmEdge::OpCode, unsigned int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;WasmEdge::OpCode, unsigned int&gt; &gt; (1 samples, 0.12%)</title><rect x="37.0" y="293" width="1.4" height="15.0" fill="rgb(237,80,4)" rx="2" ry="2" />
<text  x="40.01" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.12%)</title><rect x="652.6" y="341" width="1.4" height="15.0" fill="rgb(249,11,8)" rx="2" ry="2" />
<text  x="655.60" y="351.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (1 samples, 0.12%)</title><rect x="965.4" y="325" width="1.4" height="15.0" fill="rgb(213,73,12)" rx="2" ry="2" />
<text  x="968.37" y="335.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::getTop (1 samples, 0.12%)</title><rect x="958.3" y="357" width="1.4" height="15.0" fill="rgb(226,127,54)" rx="2" ry="2" />
<text  x="961.27" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::getMemInstByIdx (119 samples, 14.34%)</title><rect x="240.3" y="373" width="169.2" height="15.0" fill="rgb(227,95,7)" rx="2" ry="2" />
<text  x="243.31" y="383.5" >WasmEdge::Executor::E..</text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::MemoryInstance::loadValue&lt;unsigned int, 1u&gt; (2 samples, 0.24%)</title><rect x="648.3" y="357" width="2.9" height="15.0" fill="rgb(219,96,4)" rx="2" ry="2" />
<text  x="651.34" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::Validator::FormChecker::checkExpr (1 samples, 0.12%)</title><rect x="1181.5" y="389" width="1.4" height="15.0" fill="rgb(208,156,49)" rx="2" ry="2" />
<text  x="1184.47" y="399.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runNeOp&lt;unsigned int&gt; (1 samples, 0.12%)</title><rect x="964.0" y="373" width="1.4" height="15.0" fill="rgb(246,4,43)" rx="2" ry="2" />
<text  x="966.95" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_Variant_storage&lt;0ul, cxx20::span&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt; const, 18446744073709551615ul&gt;&amp;, cxx20::span&lt;WasmEdge::AST::Instruction const, 18446744073709551615ul&gt;&amp;&gt; (1 samples, 0.12%)</title><rect x="38.4" y="261" width="1.5" height="15.0" fill="rgb(246,155,7)" rx="2" ry="2" />
<text  x="41.43" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt;::~unique_ptr (2 samples, 0.24%)</title><rect x="1184.3" y="501" width="2.9" height="15.0" fill="rgb(232,17,43)" rx="2" ry="2" />
<text  x="1187.31" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, false&gt;::_Uninitialized&lt;cxx20::span&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt; const, 18446744073709551615ul&gt;&amp;, cxx20::span&lt;WasmEdge::AST::Instruction const, 18446744073709551615ul&gt;&amp;&gt; (1 samples, 0.12%)</title><rect x="38.4" y="197" width="1.5" height="15.0" fill="rgb(242,78,2)" rx="2" ry="2" />
<text  x="41.43" y="207.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.36%)</title><rect x="24.2" y="69" width="4.3" height="15.0" fill="rgb(214,90,42)" rx="2" ry="2" />
<text  x="27.22" y="79.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::unique_ptr&lt;WasmEdge::Runtime::Instance::FunctionInstance, std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt; &gt;*&gt; (2 samples, 0.24%)</title><rect x="1184.3" y="533" width="2.9" height="15.0" fill="rgb(210,174,12)" rx="2" ry="2" />
<text  x="1187.31" y="543.5" ></text>
</g>
<g >
<title>operator (360 samples, 43.37%)</title><rect x="669.7" y="389" width="511.8" height="15.0" fill="rgb(230,60,43)" rx="2" ry="2" />
<text  x="672.66" y="399.5" >operator</text>
</g>
<g >
<title>rmqueue (1 samples, 0.12%)</title><rect x="661.1" y="149" width="1.5" height="15.0" fill="rgb(252,142,8)" rx="2" ry="2" />
<text  x="664.13" y="159.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runStoreOp&lt;unsigned int, 32u&gt; (5 samples, 0.60%)</title><rect x="659.7" y="341" width="7.1" height="15.0" fill="rgb(232,25,13)" rx="2" ry="2" />
<text  x="662.71" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::MemoryInstance::loadValue&lt;unsigned int, 2u&gt; (4 samples, 0.48%)</title><rect x="617.1" y="357" width="5.6" height="15.0" fill="rgb(248,63,3)" rx="2" ry="2" />
<text  x="620.06" y="367.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;WasmEdge::AST::Instruction*, WasmEdge::AST::Instruction&gt; (1 samples, 0.12%)</title><rect x="35.6" y="277" width="1.4" height="15.0" fill="rgb(205,111,44)" rx="2" ry="2" />
<text  x="38.59" y="287.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (1 samples, 0.12%)</title><rect x="665.4" y="229" width="1.4" height="15.0" fill="rgb(223,57,37)" rx="2" ry="2" />
<text  x="668.40" y="239.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (21 samples, 2.53%)</title><rect x="679.6" y="309" width="29.9" height="15.0" fill="rgb(216,142,20)" rx="2" ry="2" />
<text  x="682.61" y="319.5" >cx..</text>
</g>
<g >
<title>std::__future_base::_State_baseV2::wait (1 samples, 0.12%)</title><rect x="1182.9" y="613" width="1.4" height="15.0" fill="rgb(215,21,50)" rx="2" ry="2" />
<text  x="1185.89" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::_M_deallocate (2 samples, 0.24%)</title><rect x="1184.3" y="133" width="2.9" height="15.0" fill="rgb(214,199,44)" rx="2" ry="2" />
<text  x="1187.31" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_Variadic_union&lt;cxx20::span&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt; const, 18446744073709551615ul&gt;&amp;, cxx20::span&lt;WasmEdge::AST::Instruction const, 18446744073709551615ul&gt;&amp;&gt; (1 samples, 0.12%)</title><rect x="38.4" y="213" width="1.5" height="15.0" fill="rgb(222,139,52)" rx="2" ry="2" />
<text  x="41.43" y="223.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (5 samples, 0.60%)</title><rect x="659.7" y="325" width="7.1" height="15.0" fill="rgb(233,223,3)" rx="2" ry="2" />
<text  x="662.71" y="335.5" ></text>
</g>
<g >
<title>bprm_execve (1 samples, 0.12%)</title><rect x="10.0" y="645" width="1.4" height="15.0" fill="rgb(228,143,41)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>WasmEdge::FileMgr::readS32 (1 samples, 0.12%)</title><rect x="17.1" y="293" width="1.4" height="15.0" fill="rgb(243,209,46)" rx="2" ry="2" />
<text  x="20.11" y="303.5" ></text>
</g>
<g >
<title>WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (7 samples, 0.84%)</title><rect x="669.7" y="357" width="9.9" height="15.0" fill="rgb(211,7,46)" rx="2" ry="2" />
<text  x="672.66" y="367.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (1 samples, 0.12%)</title><rect x="965.4" y="357" width="1.4" height="15.0" fill="rgb(218,206,12)" rx="2" ry="2" />
<text  x="968.37" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::~vector (2 samples, 0.24%)</title><rect x="1184.3" y="165" width="2.9" height="15.0" fill="rgb(210,108,29)" rx="2" ry="2" />
<text  x="1187.31" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Validator::VType, std::allocator&lt;WasmEdge::Validator::VType&gt; &gt;::size (1 samples, 0.12%)</title><rect x="1181.5" y="341" width="1.4" height="15.0" fill="rgb(213,81,40)" rx="2" ry="2" />
<text  x="1184.47" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::_M_realloc_insert&lt;WasmEdge::OpCode&amp;, unsigned long&amp;&gt; (1 samples, 0.12%)</title><rect x="35.6" y="293" width="1.4" height="15.0" fill="rgb(221,112,23)" rx="2" ry="2" />
<text  x="38.59" y="303.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadInstruction (3 samples, 0.36%)</title><rect x="24.2" y="197" width="4.3" height="15.0" fill="rgb(231,229,52)" rx="2" ry="2" />
<text  x="27.22" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;WasmEdge::AST::Instruction&gt;::construct&lt;WasmEdge::AST::Instruction, WasmEdge::OpCode&amp;, unsigned long&amp;&gt; (2 samples, 0.24%)</title><rect x="32.7" y="277" width="2.9" height="15.0" fill="rgb(245,167,34)" rx="2" ry="2" />
<text  x="35.75" y="287.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::checkValTypeProposals (1 samples, 0.12%)</title><rect x="18.5" y="293" width="1.5" height="15.0" fill="rgb(254,91,17)" rx="2" ry="2" />
<text  x="21.53" y="303.5" ></text>
</g>
<g >
<title>WasmEdge::VM::VM::unsafeExecute (803 samples, 96.75%)</title><rect x="39.9" y="453" width="1141.6" height="15.0" fill="rgb(236,174,29)" rx="2" ry="2" />
<text  x="42.86" y="463.5" >WasmEdge::VM::VM::unsafeExecute</text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.12%)</title><rect x="1185.7" y="69" width="1.5" height="15.0" fill="rgb(252,134,24)" rx="2" ry="2" />
<text  x="1188.73" y="79.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::~_Copy_ctor_base (2 samples, 0.24%)</title><rect x="1184.3" y="373" width="2.9" height="15.0" fill="rgb(213,85,43)" rx="2" ry="2" />
<text  x="1187.31" y="383.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (5 samples, 0.60%)</title><rect x="709.5" y="245" width="7.1" height="15.0" fill="rgb(225,199,12)" rx="2" ry="2" />
<text  x="712.47" y="255.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (1 samples, 0.12%)</title><rect x="966.8" y="309" width="1.4" height="15.0" fill="rgb(249,29,19)" rx="2" ry="2" />
<text  x="969.80" y="319.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;unsigned __int128, __int128, unsigned long __vector (7 samples, 0.84%)</title><rect x="669.7" y="229" width="9.9" height="15.0" fill="rgb(234,78,35)" rx="2" ry="2" />
<text  x="672.66" y="239.5" ></text>
</g>
<g >
<title>WasmEdge::VM::VM::runWasmFile (823 samples, 99.16%)</title><rect x="12.8" y="501" width="1170.1" height="15.0" fill="rgb(219,40,8)" rx="2" ry="2" />
<text  x="15.84" y="511.5" >WasmEdge::VM::VM::runWasmFile</text>
</g>
<g >
<title>__pagevec_lru_add (2 samples, 0.24%)</title><rect x="662.6" y="197" width="2.8" height="15.0" fill="rgb(228,85,51)" rx="2" ry="2" />
<text  x="665.55" y="207.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (1 samples, 0.12%)</title><rect x="966.8" y="277" width="1.4" height="15.0" fill="rgb(248,227,11)" rx="2" ry="2" />
<text  x="969.80" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::~_Copy_assign_base (2 samples, 0.24%)</title><rect x="1184.3" y="405" width="2.9" height="15.0" fill="rgb(211,214,23)" rx="2" ry="2" />
<text  x="1187.31" y="415.5" ></text>
</g>
<g >
<title>WasmEdge::FileMgr::readU32 (3 samples, 0.36%)</title><rect x="20.0" y="277" width="4.2" height="15.0" fill="rgb(216,216,42)" rx="2" ry="2" />
<text  x="22.95" y="287.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_view_base&lt;void, WasmEdge::ErrCode&gt;::expected_view_base (5 samples, 0.60%)</title><rect x="745.0" y="261" width="7.1" height="15.0" fill="rgb(222,221,14)" rx="2" ry="2" />
<text  x="748.01" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (823 samples, 99.16%)</title><rect x="12.8" y="517" width="1170.1" height="15.0" fill="rgb(236,150,0)" rx="2" ry="2" />
<text  x="15.84" y="527.5" >std::__invoke_impl&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsi..</text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;WasmEdge::AST::Instruction*&gt; (1 samples, 0.12%)</title><rect x="35.6" y="245" width="1.4" height="15.0" fill="rgb(212,10,44)" rx="2" ry="2" />
<text  x="38.59" y="255.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction::WasmFunction (1 samples, 0.12%)</title><rect x="38.4" y="149" width="1.5" height="15.0" fill="rgb(252,39,18)" rx="2" ry="2" />
<text  x="41.43" y="159.5" ></text>
</g>
<g >
<title>std::__shared_mutex_pthread::unlock (3 samples, 0.36%)</title><rect x="24.2" y="213" width="4.3" height="15.0" fill="rgb(209,171,28)" rx="2" ry="2" />
<text  x="27.22" y="223.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (21 samples, 2.53%)</title><rect x="679.6" y="293" width="29.9" height="15.0" fill="rgb(222,219,51)" rx="2" ry="2" />
<text  x="682.61" y="303.5" >cx..</text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (5 samples, 0.60%)</title><rect x="745.0" y="245" width="7.1" height="15.0" fill="rgb(229,26,25)" rx="2" ry="2" />
<text  x="748.01" y="255.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::ModuleInstance::getFunc (2 samples, 0.24%)</title><rect x="514.7" y="357" width="2.8" height="15.0" fill="rgb(223,130,5)" rx="2" ry="2" />
<text  x="517.70" y="367.5" ></text>
</g>
<g >
<title>do_anonymous_page (4 samples, 0.48%)</title><rect x="661.1" y="245" width="5.7" height="15.0" fill="rgb(234,115,52)" rx="2" ry="2" />
<text  x="664.13" y="255.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runEqzOp&lt;unsigned int&gt; (12 samples, 1.45%)</title><rect x="735.1" y="373" width="17.0" height="15.0" fill="rgb(210,20,37)" rx="2" ry="2" />
<text  x="738.06" y="383.5" ></text>
</g>
<g >
<title>note_gp_changes (1 samples, 0.12%)</title><rect x="666.8" y="293" width="1.4" height="15.0" fill="rgb(214,89,11)" rx="2" ry="2" />
<text  x="669.82" y="303.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (5 samples, 0.60%)</title><rect x="728.0" y="293" width="7.1" height="15.0" fill="rgb(226,84,52)" rx="2" ry="2" />
<text  x="730.95" y="303.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadExpression (18 samples, 2.17%)</title><rect x="12.8" y="341" width="25.6" height="15.0" fill="rgb(237,193,51)" rx="2" ry="2" />
<text  x="15.84" y="351.5" >W..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.12%)</title><rect x="1182.9" y="501" width="1.4" height="15.0" fill="rgb(223,149,19)" rx="2" ry="2" />
<text  x="1185.89" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;WasmEdge::AST::Instruction, std::allocator&lt;WasmEdge::AST::Instruction&gt; &gt;::~_Vector_base (2 samples, 0.24%)</title><rect x="1184.3" y="149" width="2.9" height="15.0" fill="rgb(247,29,22)" rx="2" ry="2" />
<text  x="1187.31" y="159.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runLtOp&lt;int&gt; (1 samples, 0.12%)</title><rect x="962.5" y="373" width="1.5" height="15.0" fill="rgb(217,75,36)" rx="2" ry="2" />
<text  x="965.53" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.12%)</title><rect x="666.8" y="373" width="1.4" height="15.0" fill="rgb(207,67,14)" rx="2" ry="2" />
<text  x="669.82" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::pop (6 samples, 0.72%)</title><rect x="901.4" y="357" width="8.5" height="15.0" fill="rgb(217,192,21)" rx="2" ry="2" />
<text  x="904.40" y="367.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (5 samples, 0.60%)</title><rect x="709.5" y="277" width="7.1" height="15.0" fill="rgb(242,149,39)" rx="2" ry="2" />
<text  x="712.47" y="287.5" ></text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.12%)</title><rect x="752.1" y="341" width="1.4" height="15.0" fill="rgb(247,128,54)" rx="2" ry="2" />
<text  x="755.12" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction&gt; (2 samples, 0.24%)</title><rect x="1184.3" y="197" width="2.9" height="15.0" fill="rgb(209,195,31)" rx="2" ry="2" />
<text  x="1187.31" y="207.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.12%)</title><rect x="1182.9" y="533" width="1.4" height="15.0" fill="rgb(226,138,30)" rx="2" ry="2" />
<text  x="1185.89" y="543.5" ></text>
</g>
<g >
<title>std::__atomic_futex_unsigned&lt;2147483648u&gt;::_M_load_when_equal (1 samples, 0.12%)</title><rect x="1182.9" y="597" width="1.4" height="15.0" fill="rgb(215,129,11)" rx="2" ry="2" />
<text  x="1185.89" y="607.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runAddOp&lt;unsigned int&gt; (21 samples, 2.53%)</title><rect x="679.6" y="373" width="29.9" height="15.0" fill="rgb(209,185,16)" rx="2" ry="2" />
<text  x="682.61" y="383.5" >Wa..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_M_reset (2 samples, 0.24%)</title><rect x="1184.3" y="341" width="2.9" height="15.0" fill="rgb(228,50,14)" rx="2" ry="2" />
<text  x="1187.31" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::AST::Instruction::reset (1 samples, 0.12%)</title><rect x="35.6" y="197" width="1.4" height="15.0" fill="rgb(221,1,17)" rx="2" ry="2" />
<text  x="38.59" y="207.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::MemoryInstance::storeValue&lt;unsigned int, 4u&gt; (5 samples, 0.60%)</title><rect x="659.7" y="357" width="7.1" height="15.0" fill="rgb(248,99,37)" rx="2" ry="2" />
<text  x="662.71" y="367.5" ></text>
</g>
<g >
<title>WasmEdge::Validator::Validator::validate (1 samples, 0.12%)</title><rect x="1181.5" y="437" width="1.4" height="15.0" fill="rgb(236,190,20)" rx="2" ry="2" />
<text  x="1184.47" y="447.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (5 samples, 0.60%)</title><rect x="1174.4" y="373" width="7.1" height="15.0" fill="rgb(213,14,11)" rx="2" ry="2" />
<text  x="1177.36" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadOpCode (1 samples, 0.12%)</title><rect x="31.3" y="309" width="1.4" height="15.0" fill="rgb(220,150,18)" rx="2" ry="2" />
<text  x="34.33" y="319.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (5 samples, 0.60%)</title><rect x="1174.4" y="293" width="7.1" height="15.0" fill="rgb(228,89,12)" rx="2" ry="2" />
<text  x="1177.36" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;true, std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.24%)</title><rect x="1184.3" y="277" width="2.9" height="15.0" fill="rgb(240,183,37)" rx="2" ry="2" />
<text  x="1187.31" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.24%)</title><rect x="1187.2" y="693" width="2.8" height="15.0" fill="rgb(222,118,34)" rx="2" ry="2" />
<text  x="1190.16" y="703.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (11 samples, 1.33%)</title><rect x="968.2" y="293" width="15.7" height="15.0" fill="rgb(242,154,4)" rx="2" ry="2" />
<text  x="971.22" y="303.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (5 samples, 0.60%)</title><rect x="745.0" y="325" width="7.1" height="15.0" fill="rgb(251,22,7)" rx="2" ry="2" />
<text  x="748.01" y="335.5" ></text>
</g>
<g >
<title>main (3 samples, 0.36%)</title><rect x="1182.9" y="677" width="4.3" height="15.0" fill="rgb(246,173,9)" rx="2" ry="2" />
<text  x="1185.89" y="687.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.12%)</title><rect x="1182.9" y="373" width="1.4" height="15.0" fill="rgb(238,80,5)" rx="2" ry="2" />
<text  x="1185.89" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::~_Variant_storage (2 samples, 0.24%)</title><rect x="1184.3" y="357" width="2.9" height="15.0" fill="rgb(234,10,5)" rx="2" ry="2" />
<text  x="1187.31" y="367.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.12%)</title><rect x="1182.9" y="389" width="1.4" height="15.0" fill="rgb(239,178,29)" rx="2" ry="2" />
<text  x="1185.89" y="399.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.12%)</title><rect x="1188.6" y="533" width="1.4" height="15.0" fill="rgb(227,210,3)" rx="2" ry="2" />
<text  x="1191.58" y="543.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::_Variant_storage&lt;false, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::_M_reset_impl (2 samples, 0.24%)</title><rect x="1184.3" y="245" width="2.9" height="15.0" fill="rgb(229,166,22)" rx="2" ry="2" />
<text  x="1187.31" y="255.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runStoreOp&lt;unsigned int, 32u&gt; (9 samples, 1.08%)</title><rect x="654.0" y="373" width="12.8" height="15.0" fill="rgb(220,210,5)" rx="2" ry="2" />
<text  x="657.02" y="383.5" ></text>
</g>
<g >
<title>schedule_tail (1 samples, 0.12%)</title><rect x="11.4" y="677" width="1.4" height="15.0" fill="rgb(208,138,34)" rx="2" ry="2" />
<text  x="14.42" y="687.5" ></text>
</g>
<g >
<title>std::variant&lt;WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, WasmEdge::Symbol&lt;void&gt;, std::unique_ptr&lt;WasmEdge::Runtime::HostFunctionBase, std::default_delete&lt;WasmEdge::Runtime::HostFunctionBase&gt; &gt; &gt;::variant&lt;0ul, cxx20::span&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt; const, 18446744073709551615ul&gt;&amp;, cxx20::span&lt;WasmEdge::AST::Instruction const, 18446744073709551615ul&gt;&amp;, WasmEdge::Runtime::Instance::FunctionInstance::WasmFunction, void&gt; (1 samples, 0.12%)</title><rect x="38.4" y="325" width="1.5" height="15.0" fill="rgb(238,101,15)" rx="2" ry="2" />
<text  x="41.43" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (5 samples, 0.60%)</title><rect x="585.8" y="341" width="7.1" height="15.0" fill="rgb(234,104,34)" rx="2" ry="2" />
<text  x="588.78" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runLoadOp&lt;unsigned int, 32u&gt; (17 samples, 2.05%)</title><rect x="622.7" y="373" width="24.2" height="15.0" fill="rgb(246,179,24)" rx="2" ry="2" />
<text  x="625.75" y="383.5" >W..</text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (11 samples, 1.33%)</title><rect x="968.2" y="357" width="15.7" height="15.0" fill="rgb(228,19,14)" rx="2" ry="2" />
<text  x="971.22" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;WasmEdge::Runtime::StackManager::Frame, std::allocator&lt;WasmEdge::Runtime::StackManager::Frame&gt; &gt;::size (5 samples, 0.60%)</title><rect x="989.5" y="357" width="7.2" height="15.0" fill="rgb(207,212,34)" rx="2" ry="2" />
<text  x="992.54" y="367.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (823 samples, 99.16%)</title><rect x="12.8" y="549" width="1170.1" height="15.0" fill="rgb(243,69,10)" rx="2" ry="2" />
<text  x="15.84" y="559.5" >std::__apply_impl&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsig..</text>
</g>
<g >
<title>wasmedge (829 samples, 99.88%)</title><rect x="11.4" y="725" width="1178.6" height="15.0" fill="rgb(240,177,0)" rx="2" ry="2" />
<text  x="14.42" y="735.5" >wasmedge</text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (2 samples, 0.24%)</title><rect x="742.2" y="341" width="2.8" height="15.0" fill="rgb(236,133,4)" rx="2" ry="2" />
<text  x="745.17" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::ModuleInstance::unsafeAddInstance&lt;WasmEdge::Runtime::Instance::FunctionInstance, WasmEdge::Runtime::Instance::ModuleInstance*, WasmEdge::AST::FunctionType const&amp;, cxx20::span&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt; const, 18446744073709551615ul&gt;, cxx20::span&lt;WasmEdge::AST::Instruction const, 18446744073709551615ul&gt; &gt; (1 samples, 0.12%)</title><rect x="38.4" y="389" width="1.5" height="15.0" fill="rgb(235,196,9)" rx="2" ry="2" />
<text  x="41.43" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.36%)</title><rect x="24.2" y="149" width="4.3" height="15.0" fill="rgb(245,73,39)" rx="2" ry="2" />
<text  x="27.22" y="159.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (5 samples, 0.60%)</title><rect x="709.5" y="325" width="7.1" height="15.0" fill="rgb(251,107,2)" rx="2" ry="2" />
<text  x="712.47" y="335.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runLocalSetOp (20 samples, 2.41%)</title><rect x="881.5" y="373" width="28.4" height="15.0" fill="rgb(206,202,24)" rx="2" ry="2" />
<text  x="884.49" y="383.5" >Wa..</text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::MemoryInstance::loadValue&lt;unsigned int, 4u&gt; (14 samples, 1.69%)</title><rect x="625.6" y="357" width="19.9" height="15.0" fill="rgb(211,193,17)" rx="2" ry="2" />
<text  x="628.59" y="367.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (21 samples, 2.53%)</title><rect x="679.6" y="341" width="29.9" height="15.0" fill="rgb(222,12,28)" rx="2" ry="2" />
<text  x="682.61" y="351.5" >cx..</text>
</g>
<g >
<title>WasmEdge::VM::VM::unsafeRunWasmFile (805 samples, 96.99%)</title><rect x="38.4" y="469" width="1144.5" height="15.0" fill="rgb(251,11,46)" rx="2" ry="2" />
<text  x="41.43" y="479.5" >WasmEdge::VM::VM::unsafeRunWasmFile</text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runSubOp&lt;unsigned int&gt; (11 samples, 1.33%)</title><rect x="968.2" y="373" width="15.7" height="15.0" fill="rgb(207,11,27)" rx="2" ry="2" />
<text  x="971.22" y="383.5" ></text>
</g>
<g >
<title>lru_cache_add (2 samples, 0.24%)</title><rect x="662.6" y="213" width="2.8" height="15.0" fill="rgb(229,174,10)" rx="2" ry="2" />
<text  x="665.55" y="223.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::ModuleInstance::addFunc&lt;WasmEdge::Runtime::Instance::ModuleInstance*, WasmEdge::AST::FunctionType const&amp;, cxx20::span&lt;std::pair&lt;unsigned int, WasmEdge::ValType&gt; const, 18446744073709551615ul&gt;, cxx20::span&lt;WasmEdge::AST::Instruction const, 18446744073709551615ul&gt; &gt; (1 samples, 0.12%)</title><rect x="38.4" y="405" width="1.5" height="15.0" fill="rgb(215,23,44)" rx="2" ry="2" />
<text  x="41.43" y="415.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.12%)</title><rect x="11.4" y="645" width="1.4" height="15.0" fill="rgb(249,148,44)" rx="2" ry="2" />
<text  x="14.42" y="655.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.12%)</title><rect x="668.2" y="357" width="1.5" height="15.0" fill="rgb(243,229,26)" rx="2" ry="2" />
<text  x="671.24" y="367.5" ></text>
</g>
<g >
<title>lock_page_lruvec_irqsave (1 samples, 0.12%)</title><rect x="664.0" y="181" width="1.4" height="15.0" fill="rgb(237,42,12)" rx="2" ry="2" />
<text  x="666.98" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.12%)</title><rect x="1184.3" y="85" width="1.4" height="15.0" fill="rgb(212,113,31)" rx="2" ry="2" />
<text  x="1187.31" y="95.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (5 samples, 0.60%)</title><rect x="1174.4" y="309" width="7.1" height="15.0" fill="rgb(209,151,41)" rx="2" ry="2" />
<text  x="1177.36" y="319.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (1 samples, 0.12%)</title><rect x="966.8" y="325" width="1.4" height="15.0" fill="rgb(208,129,51)" rx="2" ry="2" />
<text  x="969.80" y="335.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (5 samples, 0.60%)</title><rect x="728.0" y="325" width="7.1" height="15.0" fill="rgb(222,16,36)" rx="2" ry="2" />
<text  x="730.95" y="335.5" ></text>
</g>
<g >
<title>rcu_accelerate_cbs (1 samples, 0.12%)</title><rect x="666.8" y="277" width="1.4" height="15.0" fill="rgb(214,186,47)" rx="2" ry="2" />
<text  x="669.82" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.12%)</title><rect x="908.5" y="309" width="1.4" height="15.0" fill="rgb(212,225,17)" rx="2" ry="2" />
<text  x="911.51" y="319.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_base (5 samples, 0.60%)</title><rect x="709.5" y="293" width="7.1" height="15.0" fill="rgb(211,71,28)" rx="2" ry="2" />
<text  x="712.47" y="303.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (823 samples, 99.16%)</title><rect x="12.8" y="645" width="1170.1" height="15.0" fill="rgb(210,191,17)" rx="2" ry="2" />
<text  x="15.84" y="655.5" >std::thread::_Invoker&lt;std::tuple&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double,..</text>
</g>
<g >
<title>__GI___clone (824 samples, 99.28%)</title><rect x="11.4" y="709" width="1171.5" height="15.0" fill="rgb(243,223,18)" rx="2" ry="2" />
<text  x="14.42" y="719.5" >__GI___clone</text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::ModuleInstance::~ModuleInstance (2 samples, 0.24%)</title><rect x="1184.3" y="597" width="2.9" height="15.0" fill="rgb(233,215,48)" rx="2" ry="2" />
<text  x="1187.31" y="607.5" ></text>
</g>
<g >
<title>std::__atomic_futex_unsigned_base::_M_futex_wait_until (1 samples, 0.12%)</title><rect x="1182.9" y="549" width="1.4" height="15.0" fill="rgb(253,68,3)" rx="2" ry="2" />
<text  x="1185.89" y="559.5" ></text>
</g>
<g >
<title>WasmEdge::VM::VM::unsafeRunWasmFile (823 samples, 99.16%)</title><rect x="12.8" y="485" width="1170.1" height="15.0" fill="rgb(236,184,26)" rx="2" ry="2" />
<text  x="15.84" y="495.5" >WasmEdge::VM::VM::unsafeRunWasmFile</text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::pop (33 samples, 3.98%)</title><rect x="996.7" y="373" width="46.9" height="15.0" fill="rgb(237,44,49)" rx="2" ry="2" />
<text  x="999.65" y="383.5" >Wasm..</text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (21 samples, 2.53%)</title><rect x="679.6" y="325" width="29.9" height="15.0" fill="rgb(224,201,39)" rx="2" ry="2" />
<text  x="682.61" y="335.5" >cx..</text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (5 samples, 0.60%)</title><rect x="728.0" y="277" width="7.1" height="15.0" fill="rgb(215,196,11)" rx="2" ry="2" />
<text  x="730.95" y="287.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.12%)</title><rect x="10.0" y="613" width="1.4" height="15.0" fill="rgb(229,209,13)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_base (5 samples, 0.60%)</title><rect x="1174.4" y="325" width="7.1" height="15.0" fill="rgb(252,124,8)" rx="2" ry="2" />
<text  x="1177.36" y="335.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_storage_base&lt;void, WasmEdge::ErrCode, false, true&gt;::expected_storage_base (1 samples, 0.12%)</title><rect x="965.4" y="245" width="1.4" height="15.0" fill="rgb(233,70,9)" rx="2" ry="2" />
<text  x="968.37" y="255.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (3 samples, 0.36%)</title><rect x="24.2" y="181" width="4.3" height="15.0" fill="rgb(226,175,18)" rx="2" ry="2" />
<text  x="27.22" y="191.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (1 samples, 0.12%)</title><rect x="668.2" y="341" width="1.5" height="15.0" fill="rgb(247,3,47)" rx="2" ry="2" />
<text  x="671.24" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::instantiate (1 samples, 0.12%)</title><rect x="38.4" y="437" width="1.5" height="15.0" fill="rgb(242,64,54)" rx="2" ry="2" />
<text  x="41.43" y="447.5" ></text>
</g>
<g >
<title>start_thread (823 samples, 99.16%)</title><rect x="12.8" y="693" width="1170.1" height="15.0" fill="rgb(212,82,3)" rx="2" ry="2" />
<text  x="15.84" y="703.5" >start_thread</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.12%)</title><rect x="661.1" y="165" width="1.5" height="15.0" fill="rgb(241,155,23)" rx="2" ry="2" />
<text  x="664.13" y="175.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.12%)</title><rect x="1188.6" y="453" width="1.4" height="15.0" fill="rgb(224,185,22)" rx="2" ry="2" />
<text  x="1191.58" y="463.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runClzOp&lt;unsigned int&gt; (1 samples, 0.12%)</title><rect x="716.6" y="373" width="1.4" height="15.0" fill="rgb(230,220,39)" rx="2" ry="2" />
<text  x="719.58" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;WasmEdge::AST::Instruction*&gt; (1 samples, 0.12%)</title><rect x="35.6" y="261" width="1.4" height="15.0" fill="rgb(208,198,46)" rx="2" ry="2" />
<text  x="38.59" y="271.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::maybePopFrame (5 samples, 0.60%)</title><rect x="989.5" y="373" width="7.2" height="15.0" fill="rgb(213,110,31)" rx="2" ry="2" />
<text  x="992.54" y="383.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.12%)</title><rect x="666.8" y="309" width="1.4" height="15.0" fill="rgb(217,84,11)" rx="2" ry="2" />
<text  x="669.82" y="319.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.12%)</title><rect x="1182.9" y="469" width="1.4" height="15.0" fill="rgb(245,33,30)" rx="2" ry="2" />
<text  x="1185.89" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.12%)</title><rect x="666.8" y="389" width="1.4" height="15.0" fill="rgb(206,153,43)" rx="2" ry="2" />
<text  x="669.82" y="399.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runGeOp&lt;int&gt; (1 samples, 0.12%)</title><rect x="752.1" y="373" width="1.4" height="15.0" fill="rgb(254,149,5)" rx="2" ry="2" />
<text  x="755.12" y="383.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_copy_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_copy_assign_base (1 samples, 0.12%)</title><rect x="983.9" y="325" width="1.4" height="15.0" fill="rgb(253,56,33)" rx="2" ry="2" />
<text  x="986.86" y="335.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::getTopN (2 samples, 0.24%)</title><rect x="959.7" y="357" width="2.8" height="15.0" fill="rgb(247,151,0)" rx="2" ry="2" />
<text  x="962.69" y="367.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_operations_base&lt;void, WasmEdge::ErrCode&gt;::expected_operations_base (21 samples, 2.53%)</title><rect x="679.6" y="277" width="29.9" height="15.0" fill="rgb(217,54,31)" rx="2" ry="2" />
<text  x="682.61" y="287.5" >cx..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;WasmEdge::OpCode, unsigned int&gt;, std::allocator&lt;std::pair&lt;WasmEdge::OpCode, unsigned int&gt; &gt; &gt;::_M_check_len (1 samples, 0.12%)</title><rect x="37.0" y="261" width="1.4" height="15.0" fill="rgb(244,44,6)" rx="2" ry="2" />
<text  x="40.01" y="271.5" ></text>
</g>
<g >
<title>WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (7 samples, 0.84%)</title><rect x="669.7" y="341" width="9.9" height="15.0" fill="rgb(229,129,52)" rx="2" ry="2" />
<text  x="672.66" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::StackManager::push&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (92 samples, 11.08%)</title><rect x="1043.6" y="373" width="130.8" height="15.0" fill="rgb(231,154,30)" rx="2" ry="2" />
<text  x="1046.57" y="383.5" >WasmEdge::Runtim..</text>
</g>
<g >
<title>WasmEdge::VariadicUnion&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (1 samples, 0.12%)</title><rect x="962.5" y="341" width="1.5" height="15.0" fill="rgb(219,96,19)" rx="2" ry="2" />
<text  x="965.53" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runLoadOp&lt;unsigned int, 8u&gt; (3 samples, 0.36%)</title><rect x="646.9" y="373" width="4.3" height="15.0" fill="rgb(247,30,12)" rx="2" ry="2" />
<text  x="649.92" y="383.5" ></text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadInstrSeq (18 samples, 2.17%)</title><rect x="12.8" y="325" width="25.6" height="15.0" fill="rgb(231,131,51)" rx="2" ry="2" />
<text  x="15.84" y="335.5" >W..</text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::FunctionInstance::~FunctionInstance (2 samples, 0.24%)</title><rect x="1184.3" y="469" width="2.9" height="15.0" fill="rgb(239,82,14)" rx="2" ry="2" />
<text  x="1187.31" y="479.5" ></text>
</g>
<g >
<title>cxx20::expected&lt;void, WasmEdge::ErrCode&gt;::expected (1 samples, 0.12%)</title><rect x="966.8" y="357" width="1.4" height="15.0" fill="rgb(222,163,15)" rx="2" ry="2" />
<text  x="969.80" y="367.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (823 samples, 99.16%)</title><rect x="12.8" y="661" width="1170.1" height="15.0" fill="rgb(231,142,25)" rx="2" ry="2" />
<text  x="15.84" y="671.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;WasmEdge::VM::Async&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned l..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.12%)</title><rect x="1182.9" y="517" width="1.4" height="15.0" fill="rgb(229,11,37)" rx="2" ry="2" />
<text  x="1185.89" y="527.5" ></text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (5 samples, 0.60%)</title><rect x="745.0" y="341" width="7.1" height="15.0" fill="rgb(210,149,3)" rx="2" ry="2" />
<text  x="748.01" y="351.5" ></text>
</g>
<g >
<title>std::default_delete&lt;WasmEdge::Runtime::Instance::FunctionInstance&gt;::operator (2 samples, 0.24%)</title><rect x="1184.3" y="485" width="2.9" height="15.0" fill="rgb(253,193,19)" rx="2" ry="2" />
<text  x="1187.31" y="495.5" ></text>
</g>
<g >
<title>WasmEdge::Runtime::Instance::ModuleInstance::unsafeGetGlobal (48 samples, 5.78%)</title><rect x="517.5" y="341" width="68.3" height="15.0" fill="rgb(214,32,48)" rx="2" ry="2" />
<text  x="520.54" y="351.5" >WasmEdg..</text>
</g>
<g >
<title>WasmEdge::Loader::Loader::loadSection (18 samples, 2.17%)</title><rect x="12.8" y="437" width="25.6" height="15.0" fill="rgb(224,211,26)" rx="2" ry="2" />
<text  x="15.84" y="447.5" >W..</text>
</g>
<g >
<title>cxx20::detail::expected_move_assign_base&lt;void, WasmEdge::ErrCode, true&gt;::expected_move_assign_base (5 samples, 0.60%)</title><rect x="709.5" y="341" width="7.1" height="15.0" fill="rgb(209,214,50)" rx="2" ry="2" />
<text  x="712.47" y="351.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::branchToLabel (4 samples, 0.48%)</title><rect x="499.1" y="357" width="5.6" height="15.0" fill="rgb(214,105,54)" rx="2" ry="2" />
<text  x="502.06" y="367.5" ></text>
</g>
<g >
<title>std::__invoke&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned long __vector (823 samples, 99.16%)</title><rect x="12.8" y="533" width="1170.1" height="15.0" fill="rgb(237,3,42)" rx="2" ry="2" />
<text  x="15.84" y="543.5" >std::__invoke&lt;cxx20::expected&lt;std::vector&lt;std::pair&lt;WasmEdge::Variant&lt;unsigned int, int, unsigned long, long, float, double, unsigned __int128, __int128, unsigned ..</text>
</g>
<g >
<title>do_user_addr_fault (5 samples, 0.60%)</title><rect x="659.7" y="293" width="7.1" height="15.0" fill="rgb(213,151,1)" rx="2" ry="2" />
<text  x="662.71" y="303.5" ></text>
</g>
<g >
<title>loadSectionContentVec&lt;WasmEdge::AST::CodeSection, WasmEdge::Loader::Loader::loadSection (18 samples, 2.17%)</title><rect x="12.8" y="389" width="25.6" height="15.0" fill="rgb(232,38,6)" rx="2" ry="2" />
<text  x="15.84" y="399.5" >l..</text>
</g>
<g >
<title>WasmEdge::Validator::Validator::validate (1 samples, 0.12%)</title><rect x="1181.5" y="453" width="1.4" height="15.0" fill="rgb(215,95,34)" rx="2" ry="2" />
<text  x="1184.47" y="463.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.12%)</title><rect x="1182.9" y="405" width="1.4" height="15.0" fill="rgb(218,90,17)" rx="2" ry="2" />
<text  x="1185.89" y="415.5" ></text>
</g>
<g >
<title>WasmEdge::Executor::Executor::runBrIfOp (47 samples, 5.66%)</title><rect x="409.5" y="373" width="66.8" height="15.0" fill="rgb(218,216,41)" rx="2" ry="2" />
<text  x="412.49" y="383.5" >WasmEdg..</text>
</g>
</g>
</svg>
